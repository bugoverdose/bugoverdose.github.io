{"version":3,"file":"component---src-pages-tags-js-9eafcce9f7396a2b7a0c.js","mappings":"wLAGaA,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,IAAV,0EAAGD,CAAH,0DAER,qBAAGE,MAAkBC,SAASC,QAC5B,qBAAGF,MAAkBG,WAAWC,QCHpCC,GAAWP,EAAAA,EAAAA,SAAOQ,EAAAA,MAAV,oEAAGR,CAAH,yF,UCDRS,EAAcT,EAAAA,QAAAA,QAAAA,WAAH,+DAAGA,CAAH,6DACE,qBAAGE,MAAkBQ,OAAOC,cAE9B,qBAAGT,MAAkBQ,OAAOE,mBCHvCC,EAAeb,EAAAA,QAAAA,IAAAA,WAAH,iEAAGA,CAAH,6HCAZc,EAAoBd,EAAAA,QAAAA,IAAAA,WAAH,uEAAGA,CAAH,4FAEnB,qBAAGE,MAAkBQ,OAAOK,aCD1BC,GAAWhB,EAAAA,EAAAA,SAAOiB,EAAAA,IAAV,oEAAGjB,CAAH,4FAGJ,qBAAGE,MAAkBgB,WAAWC,OAChC,qBAAGjB,MAAkBG,WAAWe,WAClC,qBAAGlB,MAAkBC,SAASkB,MAClC,qBAAGnB,MAAkBQ,OAAOY,aCN1BC,GAAYvB,EAAAA,EAAAA,SAAOC,EAAAA,IAAV,uEAAGD,CAAH,uEACP,qBAAGE,MAAkBC,SAASC,QAC5B,qBAAGF,MAAkBG,WAAWmB,UAChC,qBAAGtB,MAAkBgB,WAAWC,O,oBCJpCM,EAAoBzB,EAAAA,QAAAA,IAAAA,WAAH,wEAAGA,CAAH,0DCAjB0B,EAAkB1B,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,6HAOX,qBAAGE,MAAkBgB,WAAWC,OAChC,qBAAGjB,MAAkBG,WAAWe,WAClC,qBAAGlB,MAAkBC,SAASkB,MAClC,qBAAGnB,MAAkBQ,OAAOY,aCN1BK,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,GAA8BC,EAAAA,EAAAA,WAAS,GAAhCC,EAAP,KAAgBC,EAAhB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAAxCG,EAAP,KAAoBC,EAApB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACRD,GAAeE,EAAAA,EAAAA,OACfJ,GAAW,KACV,IAECD,EAAgB,iCAGlB,gBAACJ,EAAD,KACE,gBAAC,KAAD,CAASU,KAAM,KACf,gBAACX,EAAD,KACGG,MAAAA,OADH,EACGA,EAAMS,KAAI,SAACC,EAAQC,EAAKC,GAAd,OACT,wBAAMC,IAAKF,GACRP,EAAYM,GAAQI,GACpBH,EAAMC,EAASG,OAAS,EAAxB,IAAkC,UCxBlCC,EAAc,CACzBC,aAAc,QCUHC,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnBC,EAA0BD,EAA1BC,GAAIC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,YACVC,EAAkDD,EAAlDC,WAAYC,EAAsCF,EAAtCE,eAAgBC,EAAsBH,EAAtBG,KAAMC,EAAgBJ,EAAhBI,MAAO1B,EAASsB,EAATtB,KAEjD,OACE,gBAACnB,EAAD,CAAagC,IAAKO,GAChB,gBAACzC,EAAD,CAAUgD,GAAE,IAAMN,GAChB,gBAACpC,EAAD,KACE,gBAAC,EAAA2C,EAAD,CACEC,OAAOC,EAAAA,EAAAA,GAASP,GAChBQ,IAAKP,EACLQ,SAAUhB,KAGd,gBAAC9B,EAAD,KACE,gBAACE,EAAD,KAAWqC,GACX,gBAAC9B,EAAD,KAAY+B,GACZ,gBAAC3B,EAAD,CAAUC,KAAMA,QC1BbiC,EAAuB7D,EAAAA,QAAAA,GAAAA,WAAH,2EAAGA,CAAH,mBCIpB8D,EAAc,WACzB,IACmBC,GACfC,EAAAA,EAAAA,gBAAeC,GADjBC,OAAUC,MAEZ,OACE,gCACE,gBAACpE,EAAD,aACA,gBAAC8D,EAAD,KACGE,EAAS1B,KAAI,SAAC+B,GAAD,OACZ,gBAACtB,EAAD,CAAYL,IAAK2B,EAAKpB,GAAID,QAASqB,UAOvCH,EAAoB,c,8FCnBbI,EAAqBrE,EAAAA,QAAAA,QAAAA,WAAH,sEAAGA,CAAH,+JAGT,qBAAGE,MAAkBQ,OAAOC,aAGvC2D,EAAAA,GAAAA,eAKAC,EAAAA,GAAyB,GCVvBC,EAA2B,WACtC,OACE,gBAACH,EAAD,KACE,gBAAC,IAAD,S,oFCLOI,EAAiBzE,EAAAA,QAAAA,QAAAA,WAAH,mEAAGA,CAAH,kGCFd0E,EAAoB,CAC/B7B,aAAc,OCCH8B,EAAgB3E,EAAAA,QAAAA,GAAAA,WAAH,oEAAGA,CAAH,mD,UCCb4E,GAAY5E,EAAAA,EAAAA,SAAO6E,EAAAA,IAAIC,MAAM,CAAEC,GAAI,SAA1B,uEAAG/E,CAAH,uEACP,qBAAGE,MAAkBC,SAAS6E,OAC5B,qBAAG9E,MAAkB+E,KAAKC,aAC1B,qBAAGhF,MAAkBG,WAAWC,QCHpC6E,GAAcnF,EAAAA,EAAAA,SAAO4E,GAAWE,MAAM,CAAEC,GAAI,MAAjC,uEAAG/E,CAAH,sGACb,qBAAGE,MAAkBQ,OAAO0E,kBCC1BC,EAAqB,WAChC,OACE,gBAACV,EAAD,KACE,gBAACC,EAAD,oBACA,gBAACO,EAAD,CAAaG,KAAK,iCAAiCC,OAAO,UAA1D,kBCHOC,EAAiB,WAC5B,OACE,gBAACf,EAAD,KACE,gBAAC,EAAAgB,EAAD,CACEC,IAAI,oCACJ/B,IAAI,+BACJgC,OAAQ,GACRC,YAAa,EACbhC,SAAUc,EACVmB,YAAY,gBANd,sBAQA,gBAACR,EAAD,S,yICVOS,EAAuB9F,EAAAA,QAAAA,QAAAA,WAAH,yEAAGA,CAAH,yJAMX,qBAAGE,MAAkBQ,OAAOC,aAGvC2D,EAAAA,GAAAA,eACMyB,EAAAA,GAAmBC,EAAAA,I,oBCfvBC,EAAuBjG,EAAAA,QAAAA,QAAAA,WAAH,yEAAGA,CAAH,sGAIP,qBAAGE,MAAkBQ,OAAOC,cAChC,qBAAGT,MAAkBQ,OAAOwF,mBCLrCC,EAAsBnG,EAAAA,QAAAA,IAAAA,WAAH,0EAAGA,CAAH,iDCCnBoG,GAAUpG,EAAAA,EAAAA,SAAOQ,EAAAA,MAAV,oEAAGR,CAAH,2IAKE,qBAAGE,MAAkBQ,OAAOC,cAM1B,qBAAGT,MAAkBQ,OAAOC,c,UCXvC0F,GAAUrG,EAAAA,EAAAA,SAAOsG,EAAAA,IAAV,oEAAGtG,CAAH,4EAIT,qBAAGE,MAAkBQ,OAAOK,aACxB,qBAAGb,MAAkBC,SAASC,QAC5B,qBAAGF,MAAkBG,WAAWkG,UCPpCC,EAAkBxG,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,2IAKN,qBAAGE,MAAkBQ,OAAO+F,sBCJrCC,GAAW1G,EAAAA,EAAAA,SAAOsG,EAAAA,IAAIxB,MAAM,CAAEC,GAAI,SAA1B,oEAAG/E,CAAH,oCACN,qBAAGE,MAAkBC,SAASkB,MAC5B,qBAAGnB,MAAkBG,WAAWe,WCFpCuF,EAAqB3G,EAAAA,QAAAA,IAAAA,WAAH,uEAAGA,CAAH,4GAGF,qBAAGE,MAAkBQ,OAAOC,aAE9C2D,EAAAA,GAAAA,gBCLEsC,GAAU5G,EAAAA,EAAAA,SAAOC,EAAAA,IAAV,sEAAGD,CAAH,oFAIT,qBAAGE,MAAkBQ,OAAOK,aACxB,qBAAGb,MAAkBC,SAAS0G,MAC5B,qBAAG3G,MAAkBG,WAAWC,QCNpCwG,EAAmB9G,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,2FAOlBsE,EAAAA,GAAAA,gBCDEyC,EAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACtC,OACE,gBAACN,EAAD,KACE,gBAACC,EAAD,KAAUI,EAASE,SACnB,gBAACJ,EAAD,KACGE,EAASG,KAAK9E,KAAI,SAAC+E,EAAK7E,GAAN,OACjB,gBAAC6D,EAAD,CAAS7C,GAAE,QAAU6D,EAAInE,KAAQR,IAAKF,GACpC,gBAAC8D,EAAD,KAAUe,EAAIH,IACd,gBAACT,EAAD,KACE,gBAACE,EAAD,KAAWU,EAAIC,e,UCNhBC,EAAuB,WAClC,OAA8BzF,EAAAA,EAAAA,WAAS,GAAhCC,EAAP,KAAgBC,EAAhB,KACA,GAAgDF,EAAAA,EAAAA,UAAS,IAAlD0F,EAAP,KAAyBC,EAAzB,KACA,GAAgC3F,EAAAA,EAAAA,UAAS4F,EAAAA,GAAAA,IAAlCR,EAAP,KAAiBS,EAAjB,KACQC,GAAWC,EAAAA,EAAAA,eAAXD,OAGIxD,GACRH,EAAAA,EAAAA,gBAAe6D,GADjB3D,OAAUC,MAkBZ,OAfAjC,EAAAA,EAAAA,YAAU,YACH4F,EAAAA,EAAAA,IAAqBH,IAC1BD,EAAYC,EAAOI,MAAM,MACxB,CAACJ,KAEJzF,EAAAA,EAAAA,YAAU,WACRsF,GACEQ,EAAAA,EAAAA,IACE7D,EAAM9B,KAAI,SAAC+B,GAAD,OAAUA,EAAKlB,YAAYtB,QACrCqF,IAGJlF,GAAW,KACV,CAACoC,EAAO8C,IAEPnF,EAAgB,iCAGlB,gBAACmE,EAAD,KACE,gBAACE,EAAD,KACGoB,EAAiBlF,KAChB,SAAC2E,EAAUzE,GAAX,OACEyE,EAASG,KAAKxE,OAAS,GACrB,gBAACoE,EAAD,CAAatE,IAAKF,EAAKyE,SAAUA,EAAUC,SAAUA,UAQ7DY,EAAe,aClDRlD,GAAgB3E,EAAAA,EAAAA,SAAO6E,EAAAA,IAAIC,MAAM,CAAEC,GAAI,QAA1B,yEAAG/E,CAAH,oCACX,qBAAGE,MAAkBC,SAASC,QAC5B,qBAAGF,MAAkBG,WAAWC,QCHpC2H,EAAajI,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,qDCAVkI,EAAkBlI,EAAAA,QAAAA,GAAAA,WAAH,sEAAGA,CAAH,gICCfmI,GAAanI,EAAAA,EAAAA,SAAOQ,EAAAA,MAAV,sEAAGR,CAAH,8CACZ,qBAAGE,MAAkBQ,OAAOK,aACxB,qBAAGb,MAAkBC,SAASkB,MAC5B,qBAAGnB,MAAkBG,WAAWkG,U,UCHpC6B,EAAgBpI,EAAAA,QAAAA,GAAAA,WAAH,6DAAGA,CAAH,yNACtBqI,EAAAA,EAAAA,GAAW,CAAC,aACH,kBAA4B,SAA5B,EAAGC,OAAkC,KAAO,QACnC,qBAAGpI,MAAkBQ,OAAOwF,mBAG5B,qBAAGhG,MAAkBQ,OAAOC,cAK9B,kBAA4B,SAA5B,EAAG2H,OAAkC,MAAQ,SCJpDC,EAAoB,WAC/B,OAAgC1G,EAAAA,EAAAA,UAAS4F,EAAAA,GAAAA,IAAlCR,EAAP,KAAiBS,EAAjB,KACA,GAA6BE,EAAAA,EAAAA,eAArBY,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,OAOlB,OALAzF,EAAAA,EAAAA,YAAU,YACH4F,EAAAA,EAAAA,IAAqBH,IAC1BD,EAAYC,EAAOI,MAAM,MACxB,CAACJ,IAGF,gBAACM,EAAD,KACE,gBAACtD,EAAD,aAEE,gBAACuD,EAAD,KACE,gBAACE,EAAD,CAAeE,OAAM,IAAKG,EAAAA,EAAAA,IAAKxB,IAC7B,gBAACkB,EAAD,CAAY5E,GAAOiF,EAAL,WAAwBf,EAAAA,GAAAA,IAAtC,OAIF,gBAACW,EAAD,CAAeE,OAAM,IAAKI,EAAAA,EAAAA,IAAKzB,IAC7B,gBAACkB,EAAD,CAAY5E,GAAOiF,EAAL,WAAwBf,EAAAA,GAAAA,IAAtC,YCzBCkB,EAAuB,WAClC,OACE,gBAAC7C,EAAD,KACE,gBAACyC,EAAD,MACA,gBAACjB,EAAD,QCNOsB,EAAqB5I,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,iGAIpBsE,EAAAA,GAAAA,eAEsB0B,EAAAA,ICJpB6C,EAAiB,kBAC5B,gBAACD,EAAD,KACE,gBAACD,EAAD,MACA,gBAAC,IAAD,QCUJ,EAZa,WACX,OACE,gCACE,gBAAC,IAAD,CAAWrF,MAAM,QAAQkF,SAAS,UAClC,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAACK,EAAD,U","sources":["webpack://bugoverdose/./src/components/common/recent-posts/posts/caption.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/link.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/image/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/container.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/date.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/title.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/tags/container.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/tags/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/tags/index.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/image/styles.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/index.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/container.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/index.js","webpack://bugoverdose/./src/components/common/recent-posts/sticky/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/sticky/index.js","webpack://bugoverdose/./src/components/intro-section/profile/wrapper.js","webpack://bugoverdose/./src/components/intro-section/profile/image.js","webpack://bugoverdose/./src/components/intro-section/profile/description/container.js","webpack://bugoverdose/./src/components/intro-section/profile/description/block.js","webpack://bugoverdose/./src/components/intro-section/profile/description/link.js","webpack://bugoverdose/./src/components/intro-section/profile/description/index.js","webpack://bugoverdose/./src/components/intro-section/profile/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/container.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/link.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/name.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/count/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/count/box.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/caption.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/container.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/text.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/container.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/link.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/list.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/index.js","webpack://bugoverdose/./src/components/tags/wrapper.js","webpack://bugoverdose/./src/components/tags/index.js","webpack://bugoverdose/./src/pages/tags.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { H3 } from \"../..\";\n\nexport const CaptionBox = styled(H3)`\n  padding: 20px 0 0 20px;\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n`;\n","import { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nexport const PostLink = styled(Link)`\n   display: grid;\n   grid-template-columns: 100px 1fr;\n   grid-template-rows: minmax(100px, 1fr);\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const PostWrapper = styled.article`\n  border-top: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.grayTranslucent};\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n\n  padding: 10px;\n\n  img {\n    height: 75px;\n    width: 75px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const PostInfoContainer = styled.div`\n  padding: 15px 10px;\n  color: ${({ theme }) => theme.colors.textColor};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n","import styled from \"styled-components\";\nimport { Paragraph } from \"../../..\";\n\nexport const PostDate = styled(Paragraph)`\n  margin: 0 0 10px 0;\n  padding: 0px;\n  line-height: ${({ theme }) => theme.lineHeight.big};\n  font-weight: ${({ theme }) => theme.fontWeight.regular};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  color: ${({ theme }) => theme.colors.grayThick};\n`;\n","import styled from \"styled-components\";\nimport { H3 } from \"../../..\";\n\nexport const PostTitle = styled(H3)`\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n  line-height: ${({ theme }) => theme.lineHeight.big};\n  margin-bottom: 10px;\n`;\n","import styled from \"styled-components\";\n\nexport const PostTagsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  & > * {\n    margin-right: 5px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const PostTagsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  gap: 5px;\n\n  width: 100%;\n\n  line-height: ${({ theme }) => theme.lineHeight.big};\n  font-weight: ${({ theme }) => theme.fontWeight.regular};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  color: ${({ theme }) => theme.colors.grayThick};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { getValidTagInfoDictionary } from \"../../../../../../utils\";\nimport { TagIconSolid as TagIcon } from \"../../../../icon\";\nimport { PostTagsContainer } from \"./container\";\nimport { PostTagsWrapper } from \"./wrapper\";\n\nexport const PostTags = ({ tags }) => {\n  const [loading, setLoading] = useState(true);\n  const [tagInfoDict, setTagInfoDict] = useState({});\n\n  useEffect(() => {\n    setTagInfoDict(getValidTagInfoDictionary());\n    setLoading(false);\n  }, []);\n\n  if (loading) return <></>;\n\n  return (\n    <PostTagsWrapper>\n      <TagIcon size={20} />\n      <PostTagsContainer>\n        {tags?.map((tagKey, idx, fullTags) => (\n          <span key={idx}>\n            {tagInfoDict[tagKey].ko}\n            {idx < fullTags.length - 1 ? `,` : \"\"}\n          </span>\n        ))}\n      </PostTagsContainer>\n    </PostTagsWrapper>\n  );\n};\n","export const ImageStyles = {\n  borderRadius: \"10px\",\n};\n","import React from \"react\";\nimport { PostLink } from \"./link\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { PostWrapper } from \"./wrapper\";\nimport { ImageWrapper } from \"./image/wrapper\";\nimport { PostInfoContainer } from \"./container\";\nimport { PostDate } from \"./date\";\nimport { PostTitle } from \"./title\";\nimport { PostTags } from \"./tags\";\nimport { ImageStyles } from \"./image/styles\";\n\nexport const RecentPost = ({ article }) => {\n  const { id, slug, frontmatter } = article;\n  const { hero_image, hero_image_alt, date, title, tags } = frontmatter;\n\n  return (\n    <PostWrapper key={id}>\n      <PostLink to={`/${slug}`}>\n        <ImageWrapper>\n          <GatsbyImage\n            image={getImage(hero_image)}\n            alt={hero_image_alt}\n            imgStyle={ImageStyles}\n          />\n        </ImageWrapper>\n        <PostInfoContainer>\n          <PostDate>{date}</PostDate>\n          <PostTitle>{title}</PostTitle>\n          <PostTags tags={tags} />\n        </PostInfoContainer>\n      </PostLink>\n    </PostWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const RecentPostsContainer = styled.ul`\n  padding: 20px;\n`;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { CaptionBox } from \"./caption\";\nimport { RecentPost } from \"./post\";\nimport { RecentPostsContainer } from \"./container\";\n\nexport const RecentPosts = () => {\n  const {\n    allMdx: { nodes: articles },\n  } = useStaticQuery(RecentFivePostsQuery);\n  return (\n    <>\n      <CaptionBox>최근 글</CaptionBox>\n      <RecentPostsContainer>\n        {articles.map((node) => (\n          <RecentPost key={node.id} article={node} />\n        ))}\n      </RecentPostsContainer>\n    </>\n  );\n};\n\nconst RecentFivePostsQuery = graphql`\n  query RecentFivePosts {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }, limit: 5) {\n      nodes {\n        frontmatter {\n          title\n          tags\n          date(formatString: \"YYYY-MM-DD\")\n          hero_image {\n            childImageSharp {\n              gatsbyImageData(width: 150, aspectRatio: 1)\n            }\n          }\n          hero_image_alt\n        }\n        id\n        slug\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport { device, HEADER_HEIGHT_COVERAGE } from \"../../../../constants\";\n\nexport const RecentPostsWrapper = styled.section`\n  margin: 0px 20px;\n\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-radius: 15px;\n\n  @media ${device.maxScreenWidth} {\n    margin: 0 20px 0 0;\n\n    position: -webkit-sticky;\n    position: sticky;\n    top: ${HEADER_HEIGHT_COVERAGE + 5}px;\n    align-self: start;\n  }\n`;\n","import React from \"react\";\nimport { RecentPosts } from \"../posts\";\nimport { RecentPostsWrapper } from \"./wrapper\";\n\nexport const RecentPostsStickySection = () => {\n  return (\n    <RecentPostsWrapper>\n      <RecentPosts />\n    </RecentPostsWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ProfileWrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 30px;\n  padding: 50px 20px;\n`;\n","export const ProfileImageStyle = {\n  borderRadius: \"50%\",\n};\n","import styled from \"styled-components\";\n\nexport const TextContainer = styled.h2`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 20px;\n`;\n","import styled from \"styled-components\";\nimport { H2 } from \"../../../common\";\n\nexport const TextBlock = styled(H2).attrs({ as: \"span\" })`\n  font-size: ${({ theme }) => theme.fontSize.xl3};\n  font-family: ${({ theme }) => theme.font.monospace};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n  padding-right: 15px;\n`;\n","import styled from \"styled-components\";\nimport { TextBlock } from \"./block\";\n\nexport const ProfileLink = styled(TextBlock).attrs({ as: \"a\" })`\n  color: ${({ theme }) => theme.colors.highlightColor};\n  text-decoration: underline;\n  text-underline-position: under;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n","import React from \"react\";\nimport { TextContainer } from \"./container\";\nimport { ProfileLink } from \"./link\";\nimport { TextBlock } from \"./block\";\n\nexport const ProfileDescription = () => {\n  return (\n    <TextContainer>\n      <TextBlock>Dev blog by</TextBlock>\n      <ProfileLink href=\"https://github.com/bugoverdose\" target=\"_blank\">\n        Jeong Jinwoo\n      </ProfileLink>\n    </TextContainer>\n  );\n};\n","import React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { ProfileWrapper } from \"./wrapper\";\nimport { ProfileImageStyle } from \"./image\";\nimport { ProfileDescription } from \"./description\";\n\nexport const ProfileSection = () => {\n  return (\n    <ProfileWrapper>\n      <StaticImage\n        src=\"./assets/bugoverdose-profile.jpeg\"\n        alt=\"profile image of bugoverdose\"\n        height={80}\n        aspectRatio={1 / 1}\n        imgStyle={ProfileImageStyle}\n        placeholder=\"dominantColor\"\n      />\n      <ProfileDescription />\n    </ProfileWrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport {\n  device,\n  RECENT_POSTS_LIST_WIDTH,\n  MAX_SCREEN_WIDTH,\n} from \"../../../constants\";\n\nexport const TagNavigationWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  margin: 0px 20px 20px 20px;\n\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-radius: 15px;\n\n  @media ${device.maxScreenWidth} {\n    max-width: ${MAX_SCREEN_WIDTH - RECENT_POSTS_LIST_WIDTH}px;\n\n    margin-bottom: 0px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const TagDictionaryWrapper = styled.section`\n  margin: 0px 20px 30px 20px;\n  display: flex;\n  z-index: 30;\n  border-top: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n`;\n","import styled from \"styled-components\";\n\nexport const DictionaryContainer = styled.div`\n  width: 100%;\n\n  & > div:last-child {\n    border: none;\n  }\n`;\n","import { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nexport const TagLink = styled(Link)`\n  display: flex;\n\n  height: 30px;\n  padding: 5px 10px;\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-radius: 15px;\n\n  margin: 0 10px 10px 0;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.grayBorder};\n  }\n`;\n","import styled from \"styled-components\";\nimport { H4 } from \"../../../../common\";\n\nexport const TagName = styled(H4)`\n  height: 100%;\n  margin-right: 10px;\n\n  color: ${({ theme }) => theme.colors.textColor};\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n`;\n","import styled from \"styled-components\";\n\nexport const CountBoxWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: ${({ theme }) => theme.colors.grayBoxTranslucent};\n  border-radius: 5px;\n\n  padding: 5px;\n  height: 100%;\n  min-width: 20px;\n`;\n","import styled from \"styled-components\";\nimport { H4 } from \"../../../../../common\";\n\nexport const CountBox = styled(H4).attrs({ as: \"span\" })`\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  font-weight: ${({ theme }) => theme.fontWeight.regular};\n`;\n","import styled from \"styled-components\";\nimport { device } from \"../../../../../constants\";\n\nexport const TagDivisionWrapper = styled.div`\n  padding: 15px 0px;\n\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grayBorder};\n\n  @media ${device.maxScreenWidth} {\n    display: grid;\n    grid-template-columns: 100px 1fr;\n  }\n`;\n","import styled from \"styled-components\";\nimport { H3 } from \"../../../../common\";\n\nexport const Caption = styled(H3)`\n  padding-left: 10px;\n  padding-bottom: 20px;\n\n  color: ${({ theme }) => theme.colors.textColor};\n  font-size: ${({ theme }) => theme.fontSize.lg};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n`;\n","import styled from \"styled-components\";\nimport { device } from \"../../../../../constants\";\n\nexport const TagListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  width: 100%;\n  padding-left: 20px;\n\n  @media ${device.maxScreenWidth} {\n    padding-left: 0px;\n  }\n`;\n","import React from \"react\";\nimport { TagLink } from \"./link\";\nimport { TagName } from \"./name\";\nimport { CountBoxWrapper } from \"./count/wrapper\";\nimport { CountBox } from \"./count/box\";\nimport { TagDivisionWrapper } from \"./wrapper\";\nimport { Caption } from \"./caption\";\nimport { TagListContainer } from \"./container\";\n\nexport const TagDivision = ({ division, language }) => {\n  return (\n    <TagDivisionWrapper>\n      <Caption>{division.caption}</Caption>\n      <TagListContainer>\n        {division.data.map((tag, idx) => (\n          <TagLink to={`/tag/${tag.slug}`} key={idx}>\n            <TagName>{tag[language]}</TagName>\n            <CountBoxWrapper>\n              <CountBox>{tag.count}</CountBox>\n            </CountBoxWrapper>\n          </TagLink>\n        ))}\n      </TagListContainer>\n    </TagDivisionWrapper>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"@reach/router\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { TagDictionaryWrapper } from \"./wrapper\";\nimport { DictionaryContainer } from \"./container\";\nimport { TagDivision } from \"./division\";\nimport {\n  getTagLanguageInfoDictionary,\n  isValidLanguageParam,\n} from \"../../../../utils\";\nimport { LANGUAGE } from \"../../../../constants\";\n\nexport const TagDictionarySection = () => {\n  const [loading, setLoading] = useState(true);\n  const [tagDivisionInfos, setTagDivisionInfos] = useState([]);\n  const [language, setLanguage] = useState(LANGUAGE.KO);\n  const { search } = useLocation();\n\n  const {\n    allMdx: { nodes },\n  } = useStaticQuery(AllTagDataQuery);\n\n  useEffect(() => {\n    if (!isValidLanguageParam(search)) return;\n    setLanguage(search.slice(8));\n  }, [search]);\n\n  useEffect(() => {\n    setTagDivisionInfos(\n      getTagLanguageInfoDictionary(\n        nodes.map((node) => node.frontmatter.tags),\n        language\n      )\n    );\n    setLoading(false);\n  }, [nodes, language]);\n\n  if (loading) return <></>;\n\n  return (\n    <TagDictionaryWrapper>\n      <DictionaryContainer>\n        {tagDivisionInfos.map(\n          (division, idx) =>\n            division.data.length > 0 && (\n              <TagDivision key={idx} division={division} language={language} />\n            )\n        )}\n      </DictionaryContainer>\n    </TagDictionaryWrapper>\n  );\n};\n\nconst AllTagDataQuery = graphql`\n  query AllTagData {\n    allMdx {\n      nodes {\n        frontmatter {\n          tags\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport { H2 } from \"../../../common\";\n\nexport const TextContainer = styled(H2).attrs({ as: \"nav\" })`\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n`;\n","import styled from \"styled-components\";\n\nexport const NavWrapper = styled.div`\n  padding: 20px 0;\n  margin: 0 20px;\n  position: relative;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleContainer = styled.ul`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n\n  padding-right: 5px;\n\n  height: 100%;\n`;\n","import { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nexport const ToggleLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.textColor};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n`;\n","import styled from \"styled-components\";\nimport { baseStyles } from \"../../../../styles/base-styles\";\n\nexport const LinkContainer = styled.li`\n  ${baseStyles([\"padding\"])}\n  z-index: ${({ chosen }) => (chosen === \"true\" ? \"50\" : \"10\")};\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n\n  padding: 7px;\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-bottom: none;\n\n  margin-bottom: -1px;\n\n  padding-bottom: ${({ chosen }) => (chosen === \"true\" ? \"9px\" : \"5px\")};\n\n  margin-left: 2px;\n\n  border-radius: 12px 12px 0 0;\n\n  &:hover {\n    padding-bottom: 12px;\n    z-index: 50;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"@reach/router\";\nimport { LANGUAGE } from \"../../../../constants\";\nimport { TextContainer } from \"./text\";\nimport { NavWrapper } from \"./wrapper\";\nimport { ToggleContainer } from \"./container\";\nimport { ToggleLink } from \"./link\";\nimport { isEn, isKo, isValidLanguageParam } from \"../../../../utils\";\nimport { LinkContainer } from \"./list\";\n\nexport const NavigationCaption = () => {\n  const [language, setLanguage] = useState(LANGUAGE.KO);\n  const { pathname, search } = useLocation();\n\n  useEffect(() => {\n    if (!isValidLanguageParam(search)) return;\n    setLanguage(search.slice(8));\n  }, [search]);\n\n  return (\n    <NavWrapper>\n      <TextContainer>\n        전체 태그\n        <ToggleContainer>\n          <LinkContainer chosen={`${isKo(language)}`}>\n            <ToggleLink to={`${pathname}?sortBy=${LANGUAGE.KO}`}>\n              한글\n            </ToggleLink>\n          </LinkContainer>\n          <LinkContainer chosen={`${isEn(language)}`}>\n            <ToggleLink to={`${pathname}?sortBy=${LANGUAGE.EN}`}>\n              ENG\n            </ToggleLink>\n          </LinkContainer>\n        </ToggleContainer>\n      </TextContainer>\n    </NavWrapper>\n  );\n};\n","import React from \"react\";\nimport { TagNavigationWrapper } from \"./wrapper\";\nimport { TagDictionarySection } from \"./tag-dictionary\";\nimport { NavigationCaption } from \"./nav\";\n\nexport const TagNavigationSection = () => {\n  return (\n    <TagNavigationWrapper>\n      <NavigationCaption />\n      <TagDictionarySection />\n    </TagNavigationWrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { device, RECENT_POSTS_LIST_WIDTH } from \"../../constants\";\n\nexport const AllTagsPageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${device.maxScreenWidth} {\n    display: grid;\n    grid-template-columns: 1fr ${RECENT_POSTS_LIST_WIDTH}px;\n  }\n`;\n","import React from \"react\";\nimport { RecentPostsStickySection } from \"../common/recent-posts/sticky\";\nimport { TagNavigationSection } from \"./tag-nav\";\nimport { AllTagsPageWrapper } from \"./wrapper\";\n\nexport const AllTagsSection = () => (\n  <AllTagsPageWrapper>\n    <TagNavigationSection />\n    <RecentPostsStickySection />\n  </AllTagsPageWrapper>\n);\n","import React from \"react\";\nimport { ProfileSection } from \"../components/intro-section/profile\";\nimport Layout from \"../components/layout\";\nimport SeoHelmet from \"../components/seo\";\nimport { AllTagsSection } from \"../components/tags\";\n\nconst Tags = () => {\n  return (\n    <>\n      <SeoHelmet title=\"태그 사전\" pathname=\"/tags\" />\n      <Layout>\n        <ProfileSection />\n        <AllTagsSection />\n      </Layout>\n    </>\n  );\n};\n\nexport default Tags;\n"],"names":["CaptionBox","styled","H3","theme","fontSize","base","fontWeight","bold","PostLink","Link","PostWrapper","colors","grayBorder","grayTranslucent","ImageWrapper","PostInfoContainer","textColor","PostDate","Paragraph","lineHeight","big","regular","sm","grayThick","PostTitle","normal","PostTagsContainer","PostTagsWrapper","PostTags","tags","useState","loading","setLoading","tagInfoDict","setTagInfoDict","useEffect","getValidTagInfoDictionary","size","map","tagKey","idx","fullTags","key","ko","length","ImageStyles","borderRadius","RecentPost","article","id","slug","frontmatter","hero_image","hero_image_alt","date","title","to","G","image","getImage","alt","imgStyle","RecentPostsContainer","RecentPosts","articles","useStaticQuery","RecentFivePostsQuery","allMdx","nodes","node","RecentPostsWrapper","device","HEADER_HEIGHT_COVERAGE","RecentPostsStickySection","ProfileWrapper","ProfileImageStyle","TextContainer","TextBlock","H2","attrs","as","xl3","font","monospace","ProfileLink","highlightColor","ProfileDescription","href","target","ProfileSection","S","src","height","aspectRatio","placeholder","TagNavigationWrapper","MAX_SCREEN_WIDTH","RECENT_POSTS_LIST_WIDTH","TagDictionaryWrapper","backgroundColor","DictionaryContainer","TagLink","TagName","H4","medium","CountBoxWrapper","grayBoxTranslucent","CountBox","TagDivisionWrapper","Caption","lg","TagListContainer","TagDivision","division","language","caption","data","tag","count","TagDictionarySection","tagDivisionInfos","setTagDivisionInfos","LANGUAGE","setLanguage","search","useLocation","AllTagDataQuery","isValidLanguageParam","slice","getTagLanguageInfoDictionary","NavWrapper","ToggleContainer","ToggleLink","LinkContainer","baseStyles","chosen","NavigationCaption","pathname","isKo","isEn","TagNavigationSection","AllTagsPageWrapper","AllTagsSection"],"sourceRoot":""}