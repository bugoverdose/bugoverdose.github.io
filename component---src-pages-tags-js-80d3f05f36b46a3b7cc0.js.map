{"version":3,"file":"component---src-pages-tags-js-80d3f05f36b46a3b7cc0.js","mappings":"0LAGaA,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,IAAG,0EAAVD,CAAU,0DAErB,YAAQ,SAALE,MAAkBC,SAASC,IAAI,IAChC,YAAQ,SAALF,MAAkBG,WAAWC,IAAI,ICHxCC,GAAWP,EAAAA,EAAAA,SAAOQ,EAAAA,MAAK,oEAAZR,CAAY,8HAKzB,YAAQ,SAALE,MAAkBO,OAAOC,MAAM,I,UCNhCC,EAAcX,EAAAA,QAAAA,QAAAA,WAAc,+DAAdA,CAAc,6DACf,YAAQ,SAALE,MAAkBU,OAAOC,UAAU,IAExC,YAAQ,SAALX,MAAkBU,OAAOE,eAAe,ICHtDC,EAAef,EAAAA,QAAAA,IAAAA,WAAU,iEAAVA,CAAU,sJAG3B,YAAQ,SAALE,MAAkBO,OAAOC,MAAM,ICHhCM,EAAoBhB,EAAAA,QAAAA,IAAAA,WAAU,uEAAVA,CAAU,4FAEhC,YAAQ,SAALE,MAAkBU,OAAOK,SAAS,ICDnCC,GAAWlB,EAAAA,EAAAA,SAAOmB,EAAAA,IAAU,oEAAjBnB,CAAiB,4FAGxB,YAAQ,SAALE,MAAkBkB,WAAWC,GAAG,IACnC,YAAQ,SAALnB,MAAkBG,WAAWiB,OAAO,IACzC,YAAQ,SAALpB,MAAkBC,SAASoB,EAAE,IACpC,YAAQ,SAALrB,MAAkBU,OAAOY,SAAS,ICNnCC,GAAYzB,EAAAA,EAAAA,SAAOC,EAAAA,IAAG,uEAAVD,CAAU,uEACpB,YAAQ,SAALE,MAAkBC,SAASC,IAAI,IAChC,YAAQ,SAALF,MAAkBG,WAAWqB,MAAM,IACtC,YAAQ,SAALxB,MAAkBkB,WAAWC,GAAG,I,oBCJvCM,EAAkB3B,EAAAA,QAAAA,IAAAA,WAAU,mEAAVA,CAAU,6HAOxB,YAAQ,SAALE,MAAkBkB,WAAWC,GAAG,IACnC,YAAQ,SAALnB,MAAkBG,WAAWiB,OAAO,IACzC,YAAQ,SAALpB,MAAkBC,SAASoB,EAAE,IACpC,YAAQ,SAALrB,MAAkBU,OAAOY,SAAS,ICPnCI,EAAW,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACzB,GAA8BC,EAAAA,EAAAA,WAAS,GAAhCC,EAAO,KAAEC,EAAU,KAC1B,GAAsCF,EAAAA,EAAAA,UAAS,CAAC,GAAzCG,EAAW,KAAEC,EAAc,KAOlC,IALAC,EAAAA,EAAAA,YAAU,WACRD,GAAeE,EAAAA,EAAAA,OACfJ,GAAW,EACb,GAAG,IAECD,EAAS,OAAO,iCAEpB,IAAIM,EAAgBR,aAAI,EAAJA,EAAMS,KAAI,SAACC,GAAM,OAAKN,EAAYM,GAAQC,EAAE,IAAEC,KAAK,MAMvE,OAJIJ,EAAcK,OAAS,KACzBL,EAAgBA,EAAcM,UAAU,EAAG,IAAM,OAIjD,gBAAChB,EAAe,KACd,gBAAC,KAAO,CAACiB,KAAM,KACf,4BAAOP,GAGb,EC5BaQ,EAAc,CACzBC,aAAc,QCWHC,EAAa,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QACnBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACNC,EACND,EADMC,WAAYC,EAClBF,EADkBE,eAAgBC,EAClCH,EADkCG,KAAMC,EACxCJ,EADwCI,MAAOC,EAC/CL,EAD+CK,SAAU1B,EACzDqB,EADyDrB,KAGrD2B,GAAcC,EAAAA,EAAAA,MAEpB,OACE,gBAAC9C,EAAW,CAAC2C,MAAOA,GAClB,gBAAC/C,EAAQ,CAACmD,GAAE,IAAMT,GAChB,gBAAClC,EAAY,KACX,gBAAC,EAAA4C,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAASV,GAChBW,IAAKV,EACLW,SAAUlB,KAGd,gBAAC7B,EAAiB,KAChB,gBAACE,EAAQ,KACNmC,EAAK,MAAIG,EAAYD,GAAUf,IAElC,gBAACf,EAAS,KAAE6B,GACZ,gBAAC1B,EAAQ,CAACC,KAAMA,MAK1B,ECrCamC,EAAuBhE,EAAAA,QAAAA,GAAAA,WAAS,2EAATA,CAAS,mBCIhCiE,EAAc,WACzB,IACmBC,GACfC,EAAAA,EAAAA,gBAAeC,GADjBC,OAAUC,MAEZ,OACE,gCACE,gBAACvE,EAAU,KAAC,QACZ,gBAACiE,EAAoB,KAClBE,EAAS5B,KAAI,SAACiC,GAAI,OACjB,gBAACxB,EAAU,CAACyB,IAAKD,EAAKE,GAAIzB,QAASuB,GAAQ,KAKrD,EAEMH,EAAoB,Y,+ECpBbM,E,QAAqB1E,QAAAA,QAAAA,WAAc,sEAAdA,CAAc,+JAG1B,YAAQ,SAALE,MAAkBU,OAAOC,UAAU,IAGjD,YAAQ,SAALX,MAAkBO,OAAOkE,cAAc,IAK1C,YAAQ,SAALzE,MAAkB0E,WAAWC,uBAAyB,CAAC,ICTxDC,EAA2B,WACtC,OACE,gBAACJ,EAAkB,KACjB,gBAAC,IAAW,MAGlB,C,yHCRaK,EAAuB/E,EAAAA,QAAAA,QAAAA,WAAc,yEAAdA,CAAc,uJAM5B,YAAQ,SAALE,MAAkBU,OAAOC,UAAU,IAGjD,YAAQ,SAALX,MAAkBO,OAAOkE,cAAc,IACpC,oBACXzE,MACE8E,UAAsD,OAAzB,EAAhBC,iBAAyC,EAAvBC,wBAEgB,Q,oBCd1CC,EAAuBnF,EAAAA,QAAAA,QAAAA,WAAc,yEAAdA,CAAc,sGAIxB,YAAQ,SAALE,MAAkBU,OAAOC,UAAU,IAC1C,YAAQ,SAALX,MAAkBU,OAAOwE,eAAe,ICLpDC,EAAsBrF,EAAAA,QAAAA,IAAAA,WAAU,0EAAVA,CAAU,iDCAhCsF,EAAqBtF,EAAAA,QAAAA,IAAAA,WAAU,uEAAVA,CAAU,4GAGf,YAAQ,SAALE,MAAkBU,OAAOC,UAAU,IAExD,YAAQ,SAALX,MAAkBO,OAAOkE,cAAc,I,SCJxCY,GAAUvF,EAAAA,EAAAA,SAAOC,EAAAA,IAAG,sEAAVD,CAAU,oFAItB,YAAQ,SAALE,MAAkBU,OAAOK,SAAS,IACjC,YAAQ,SAALf,MAAkBC,SAASqF,EAAE,IAC9B,YAAQ,SAALtF,MAAkBG,WAAWC,IAAI,ICPxCmF,EAAmBzF,EAAAA,QAAAA,IAAAA,WAAU,sEAAVA,CAAU,4FAO/B,YAAQ,SAALE,MAAkBO,OAAOkE,cAAc,ICNxCe,GAAW1F,EAAAA,EAAAA,SAAO2F,EAAAA,IAAIC,MAAM,CAAEC,GAAI,SAAS,oEAAhC7F,CAAgC,oDACzC,YAAQ,SAALE,MAAkBC,SAASoB,EAAE,IAC9B,YAAQ,SAALrB,MAAkBG,WAAWiB,OAAO,IACvC,YAAQ,SAALpB,MAAkBkB,WAAWM,MAAM,ICJ1CoE,EAAkB9F,EAAAA,QAAAA,IAAAA,WAAU,oEAAVA,CAAU,2IAKnB,YAAQ,SAALE,MAAkBU,OAAOmF,kBAAkB,ICHvDC,EAAQ,SAAH,GAAmB,IAAbC,EAAK,EAALA,MACtB,OACE,gBAACH,EAAe,KACd,gBAACJ,EAAQ,KAAEO,GAGjB,ECPaC,GAAUlG,EAAAA,EAAAA,SAAOQ,EAAAA,MAAK,mEAAZR,CAAY,2IAKb,YAAQ,SAALE,MAAkBU,OAAOC,UAAU,IAMpC,YAAQ,SAALX,MAAkBU,OAAOC,UAAU,ICXjDsF,GAAUnG,EAAAA,EAAAA,SAAO2F,EAAAA,IAAG,oEAAV3F,CAAU,4FAGhB,YAAQ,SAALE,MAAkBkB,WAAWM,MAAM,IAE5C,YAAQ,SAALxB,MAAkBU,OAAOK,SAAS,IACjC,YAAQ,SAALf,MAAkBC,SAASC,IAAI,IAChC,YAAQ,SAALF,MAAkBG,WAAW+F,MAAM,ICL1CC,EAAM,SAAH,GAAwC,IAAlCC,EAAG,EAAHA,IAAKC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YACnC,OACE,gBAACN,EAAO,CAACxC,GAAE,QAAU4C,EAAIrD,KAAQK,MAAOkD,EAAYF,EAAIC,KACtD,gBAACJ,EAAO,KAAEG,EAAIC,IACd,gBAACP,EAAK,CAACC,MAAOK,EAAIL,QAGxB,ECNaQ,EAAc,SAAH,GAA6C,IAAvCC,EAAQ,EAARA,SAAUH,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAChD,OACE,gBAAClB,EAAkB,KACjB,gBAACC,EAAO,KAAEmB,EAASC,SACnB,gBAAClB,EAAgB,KACdiB,EAASE,KAAKtE,KAAI,SAACgE,EAAKO,GAAG,OAC1B,gBAACR,EAAG,CACFC,IAAKA,EACLC,SAAUA,EACVC,YAAaA,EACbhC,IAAKqC,GACL,KAKZ,E,oBCVaC,EAAuB,WAClC,OAA8BhF,EAAAA,EAAAA,WAAS,GAAhCC,EAAO,KAAEC,EAAU,KAC1B,GAAgDF,EAAAA,EAAAA,UAAS,IAAlDiF,EAAgB,KAAEC,EAAmB,KAC5C,GAAgClF,EAAAA,EAAAA,UAASmF,EAAAA,GAAAA,IAAlCV,EAAQ,KAAEW,EAAW,KACpBC,GAAWC,EAAAA,EAAAA,eAAXD,OAGI7C,GACRH,EAAAA,EAAAA,gBAAekD,GADjBhD,OAAUC,MAkBZ,OAfAnC,EAAAA,EAAAA,YAAU,YACHmF,EAAAA,EAAAA,IAAqBH,IAC1BD,EAAYC,EAAOI,MAAM,GAC3B,GAAG,CAACJ,KAEJhF,EAAAA,EAAAA,YAAU,WACR6E,GACEQ,EAAAA,EAAAA,IACElD,EAAMhC,KAAI,SAACiC,GAAI,OAAKA,EAAKrB,YAAYrB,IAAI,IACzC0E,IAGJvE,GAAW,EACb,GAAG,CAACsC,EAAOiC,IAEPxE,EAAgB,iCAGlB,gBAACoD,EAAoB,KACnB,gBAACE,EAAmB,KACjB0B,EAAiBzE,KAChB,SAACoE,EAAUG,GAAG,OACZH,EAASE,KAAKlE,OAAS,GACrB,gBAAC+D,EAAW,CACVjC,IAAKqC,EACLH,SAAUA,EACVH,SAAUA,EACVC,YACED,IAAaU,EAAAA,GAAAA,GAAcQ,EAAAA,GAAgBC,EAAAA,IAGhD,KAKb,EAEML,EAAe,aC1DRM,EAAa3H,EAAAA,QAAAA,IAAAA,WAAU,+DAAVA,CAAU,qDCAvB4H,EAAkB5H,EAAAA,QAAAA,GAAAA,WAAS,kEAATA,CAAS,gICC3B6H,GAAa7H,EAAAA,EAAAA,SAAOQ,EAAAA,MAAK,sEAAZR,CAAY,yNAClC,YAAQ,SAALE,MAAkB4H,WAAW,CAAC,WAAW,IAEnC,YAAS,MAAmB,SAAnB,EAANC,OAAkC,KAAO,IAAI,IACvC,YAAQ,SAAL7H,MAAkBU,OAAOwE,eAAe,IAG3C,YAAQ,SAALlF,MAAkBU,OAAOC,UAAU,IAKxC,YAAS,MAAmB,SAAnB,EAANkH,OAAkC,MAAQ,KAAK,ICbzDC,EAAehI,EAAAA,QAAAA,GAAAA,WAAS,8DAATA,CAAS,8CAC1B,YAAQ,SAALE,MAAkBU,OAAOK,SAAS,IACjC,YAAQ,SAALf,MAAkBC,SAASoB,EAAE,IAC9B,YAAQ,SAALrB,MAAkBG,WAAW+F,MAAM,ICD1C6B,EAAuB,SAAH,GAK1B,IAJL3E,EAAK,EAALA,MACA4E,EAAS,EAATA,UACAH,EAAM,EAANA,OACAI,EAAY,EAAZA,aAEA,OACE,gBAACN,EAAU,CAACvE,MAAOA,EAAOyE,OAAQA,EAAQrE,GAAIyE,GAC5C,gBAACH,EAAY,KAAEE,GAGrB,ECZaE,GAAepI,EAAAA,EAAAA,SAAOqI,EAAAA,IAAIzC,MAAM,CAAEC,GAAI,QAAQ,8EAA/B7F,CAA+B,oCAC5C,YAAQ,SAALE,MAAkBC,SAASC,IAAI,IAChC,YAAQ,SAALF,MAAkBG,WAAWC,IAAI,ICQxCgI,EAAoB,WAC/B,OAAgCxG,EAAAA,EAAAA,UAASmF,EAAAA,GAAAA,IAAlCV,EAAQ,KAAEW,EAAW,KAC5B,GAA6BE,EAAAA,EAAAA,eAArBmB,EAAQ,EAARA,SAAUpB,EAAM,EAANA,OAOlB,OALAhF,EAAAA,EAAAA,YAAU,YACHmF,EAAAA,EAAAA,IAAqBH,IAC1BD,EAAYC,EAAOI,MAAM,GAC3B,GAAG,CAACJ,IAGF,gBAACQ,EAAU,KACT,gBAACS,EAAY,KAAC,QAEZ,gBAACR,EAAe,KACd,gBAACK,EAAoB,CACnBC,UAAU,KACV5E,MAAOkF,EAAAA,GACPT,OAAM,IAAKU,EAAAA,EAAAA,IAAKlC,GAChB4B,aAAiBI,EAAQ,WAAWtB,EAAAA,GAAAA,KAEtC,gBAACgB,EAAoB,CACnBC,UAAU,MACV5E,MAAOoF,EAAAA,GACPX,OAAM,IAAKY,EAAAA,EAAAA,IAAKpC,GAChB4B,aAAiBI,EAAQ,WAAWtB,EAAAA,GAAAA,OAMhD,ECtCa2B,EAAuB,WAClC,OACE,gBAAC7D,EAAoB,KACnB,gBAACuD,EAAiB,MAClB,gBAACxB,EAAoB,MAG3B,ECVa+B,EAAqB7I,EAAAA,QAAAA,IAAAA,WAAU,sEAAVA,CAAU,oGAIjC,YAAQ,SAALE,MAAkBO,OAAOkE,cAAc,IAEpB,YAAQ,SAALzE,MACnB8E,UAAUE,wBAAuB,QAG9C,YAAQ,SAALhF,MAAkB4I,iBAAiB,ICP7BC,EAAiB,WAAH,OACzB,gBAACF,EAAkB,KACjB,gBAACD,EAAoB,MACrB,gBAAC,IAAwB,MACN,ECiBvB,EApBa,WACX,OACE,gCACE,gBAAC,IAAS,CACRtF,MAAM,QACN0F,YACE,uEAIFT,SAAS,UAEX,gBAAC,IAAM,CAACU,kBAAkB,GAExB,gBAACF,EAAc,OAIvB,C","sources":["webpack://bugoverdose/./src/components/common/recent-posts/posts/caption.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/link.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/image/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/container.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/date.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/title.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/tags/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/tags/index.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/image/styles.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/index.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/container.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/index.js","webpack://bugoverdose/./src/components/common/recent-posts/sticky/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/sticky/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/container.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/caption.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/container.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/count/box.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/count/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/count/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/link.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/name.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/switch.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/toggle/link.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/toggle/text.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/toggle/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/container.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/index.js","webpack://bugoverdose/./src/components/tags/wrapper.js","webpack://bugoverdose/./src/components/tags/index.js","webpack://bugoverdose/./src/pages/tags.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { H3 } from \"../..\";\n\nexport const CaptionBox = styled(H3)`\n  padding: 20px 0 0 20px;\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n`;\n","import { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nexport const PostLink = styled(Link)`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: minmax(100px, 1fr);\n\n  @media ${({ theme }) => theme.device.mobile} {\n    grid-template-columns: 100px 1fr;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const PostWrapper = styled.article`\n  border-top: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.grayTranslucent};\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const ImageWrapper = styled.div`\n  display: none;\n\n  @media ${({ theme }) => theme.device.mobile} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n\n    padding: 10px;\n\n    img {\n      height: 75px;\n      width: 75px;\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const PostInfoContainer = styled.div`\n  padding: 15px 10px;\n  color: ${({ theme }) => theme.colors.textColor};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n","import styled from \"styled-components\";\nimport { Paragraph } from \"../../..\";\n\nexport const PostDate = styled(Paragraph)`\n  margin: 0 0 10px 0;\n  padding: 0px;\n  line-height: ${({ theme }) => theme.lineHeight.big};\n  font-weight: ${({ theme }) => theme.fontWeight.regular};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  color: ${({ theme }) => theme.colors.grayThick};\n`;\n","import styled from \"styled-components\";\nimport { H3 } from \"../../..\";\n\nexport const PostTitle = styled(H3)`\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n  line-height: ${({ theme }) => theme.lineHeight.big};\n  margin-bottom: 10px;\n`;\n","import styled from \"styled-components\";\n\nexport const PostTagsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  gap: 5px;\n\n  width: 100%;\n\n  line-height: ${({ theme }) => theme.lineHeight.big};\n  font-weight: ${({ theme }) => theme.fontWeight.regular};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  color: ${({ theme }) => theme.colors.grayThick};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { getValidTagInfoDictionary } from \"../../../../../../utils\";\nimport { TagIconSolid as TagIcon } from \"../../../../icon\";\nimport { PostTagsWrapper } from \"./wrapper\";\n\nexport const PostTags = ({ tags }) => {\n  const [loading, setLoading] = useState(true);\n  const [tagInfoDict, setTagInfoDict] = useState({});\n\n  useEffect(() => {\n    setTagInfoDict(getValidTagInfoDictionary());\n    setLoading(false);\n  }, []);\n\n  if (loading) return <></>;\n\n  let fullTagString = tags?.map((tagKey) => tagInfoDict[tagKey].ko).join(\", \");\n\n  if (fullTagString.length > 28) {\n    fullTagString = fullTagString.substring(0, 25) + \"...\";\n  }\n\n  return (\n    <PostTagsWrapper>\n      <TagIcon size={20} />\n      <span>{fullTagString}</span>\n    </PostTagsWrapper>\n  );\n};\n","export const ImageStyles = {\n  borderRadius: \"10px\",\n};\n","import React from \"react\";\nimport { PostLink } from \"./link\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { PostWrapper } from \"./wrapper\";\nimport { ImageWrapper } from \"./image/wrapper\";\nimport { PostInfoContainer } from \"./container\";\nimport { PostDate } from \"./date\";\nimport { PostTitle } from \"./title\";\nimport { PostTags } from \"./tags\";\nimport { ImageStyles } from \"./image/styles\";\nimport { getCategoryInfoDictionary } from \"../../../../../utils\";\n\nexport const RecentPost = ({ article }) => {\n  const { slug, frontmatter } = article;\n  const { hero_image, hero_image_alt, date, title, category, tags } =\n    frontmatter;\n\n  const categoryDic = getCategoryInfoDictionary();\n\n  return (\n    <PostWrapper title={title}>\n      <PostLink to={`/${slug}`}>\n        <ImageWrapper>\n          <GatsbyImage\n            image={getImage(hero_image)}\n            alt={hero_image_alt}\n            imgStyle={ImageStyles}\n          />\n        </ImageWrapper>\n        <PostInfoContainer>\n          <PostDate>\n            {date} | {categoryDic[category].ko}\n          </PostDate>\n          <PostTitle>{title}</PostTitle>\n          <PostTags tags={tags} />\n        </PostInfoContainer>\n      </PostLink>\n    </PostWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const RecentPostsContainer = styled.ul`\n  padding: 20px;\n`;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { CaptionBox } from \"./caption\";\nimport { RecentPost } from \"./post\";\nimport { RecentPostsContainer } from \"./container\";\n\nexport const RecentPosts = () => {\n  const {\n    allMdx: { nodes: articles },\n  } = useStaticQuery(RecentFivePostsQuery);\n  return (\n    <>\n      <CaptionBox>최근 글</CaptionBox>\n      <RecentPostsContainer>\n        {articles.map((node) => (\n          <RecentPost key={node.id} article={node} />\n        ))}\n      </RecentPostsContainer>\n    </>\n  );\n};\n\nconst RecentFivePostsQuery = graphql`\n  query RecentFivePosts {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }, limit: 5) {\n      nodes {\n        frontmatter {\n          title\n          category\n          tags\n          date(formatString: \"YYYY-MM-DD\")\n          hero_image {\n            childImageSharp {\n              gatsbyImageData(width: 150, aspectRatio: 2)\n            }\n          }\n          hero_image_alt\n        }\n        id\n        slug\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const RecentPostsWrapper = styled.section`\n  margin: 0px 20px;\n\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-radius: 15px;\n\n  @media ${({ theme }) => theme.device.maxScreenWidth} {\n    margin: 0 20px 0 0;\n\n    position: -webkit-sticky;\n    position: sticky;\n    top: ${({ theme }) => theme.heightSize.HEADER_HEIGHT_COVERAGE + 5}px;\n    align-self: start;\n  }\n`;\n","import React from \"react\";\nimport { RecentPosts } from \"../posts\";\nimport { RecentPostsWrapper } from \"./wrapper\";\n\nexport const RecentPostsStickySection = () => {\n  return (\n    <RecentPostsWrapper>\n      <RecentPosts />\n    </RecentPostsWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const TagNavigationWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  margin: 0px 20px 20px 20px;\n\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-radius: 15px;\n\n  @media ${({ theme }) => theme.device.maxScreenWidth} {\n    max-width: ${({\n      theme: {\n        widthSize: { MAX_SCREEN_WIDTH, RECENT_POSTS_LIST_WIDTH },\n      },\n    }) => `${MAX_SCREEN_WIDTH - RECENT_POSTS_LIST_WIDTH}px`};\n\n    margin-bottom: 0px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const TagDictionaryWrapper = styled.section`\n  margin: 0px 20px 10px 20px;\n  display: flex;\n  z-index: 30;\n  border-top: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n`;\n","import styled from \"styled-components\";\n\nexport const DictionaryContainer = styled.div`\n  width: 100%;\n\n  & > div:last-child {\n    border: none;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const TagDivisionWrapper = styled.div`\n  padding: 15px 0px;\n\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grayBorder};\n\n  @media ${({ theme }) => theme.device.maxScreenWidth} {\n    display: grid;\n    grid-template-columns: 100px 1fr;\n  }\n`;\n","import styled from \"styled-components\";\nimport { H3 } from \"../../../../common\";\n\nexport const Caption = styled(H3)`\n  padding-left: 10px;\n  padding-bottom: 20px;\n\n  color: ${({ theme }) => theme.colors.textColor};\n  font-size: ${({ theme }) => theme.fontSize.lg};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n`;\n","import styled from \"styled-components\";\n\nexport const TagListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  width: 100%;\n  padding-left: 10px;\n\n  @media ${({ theme }) => theme.device.maxScreenWidth} {\n    padding-left: 0px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { H4 } from \"../../../../../../common\";\n\nexport const CountBox = styled(H4).attrs({ as: \"span\" })`\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  font-weight: ${({ theme }) => theme.fontWeight.regular};\n  line-height: ${({ theme }) => theme.lineHeight.normal};\n`;\n","import styled from \"styled-components\";\n\nexport const CountBoxWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: ${({ theme }) => theme.colors.grayBoxTranslucent};\n  border-radius: 5px;\n\n  padding: 5px;\n  height: 100%;\n  min-width: 20px;\n`;\n","import React from \"react\";\nimport { CountBox } from \"./box\";\nimport { CountBoxWrapper } from \"./wrapper\";\n\nexport const Count = ({ count }) => {\n  return (\n    <CountBoxWrapper>\n      <CountBox>{count}</CountBox>\n    </CountBoxWrapper>\n  );\n};\n","import { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nexport const TagLink = styled(Link)`\n  display: flex;\n\n  height: 30px;\n  padding: 5px 10px;\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-radius: 15px;\n\n  margin: 0 10px 10px 0;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.grayBorder};\n  }\n`;\n","import styled from \"styled-components\";\nimport { H4 } from \"../../../../../common\";\n\nexport const TagName = styled(H4)`\n  height: 100%;\n  margin-right: 10px;\n  line-height: ${({ theme }) => theme.lineHeight.normal};\n\n  color: ${({ theme }) => theme.colors.textColor};\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n`;\n","import React from \"react\";\nimport { Count } from \"./count\";\nimport { TagLink } from \"./link\";\nimport { TagName } from \"./name\";\n\nexport const Tag = ({ tag, language, titleFormat }) => {\n  return (\n    <TagLink to={`/tag/${tag.slug}`} title={titleFormat(tag[language])}>\n      <TagName>{tag[language]}</TagName>\n      <Count count={tag.count} />\n    </TagLink>\n  );\n};\n","import React from \"react\";\nimport { TagDivisionWrapper } from \"./wrapper\";\nimport { Caption } from \"./caption\";\nimport { TagListContainer } from \"./container\";\nimport { Tag } from \"./tag\";\n\nexport const TagDivision = ({ division, language, titleFormat }) => {\n  return (\n    <TagDivisionWrapper>\n      <Caption>{division.caption}</Caption>\n      <TagListContainer>\n        {division.data.map((tag, idx) => (\n          <Tag\n            tag={tag}\n            language={language}\n            titleFormat={titleFormat}\n            key={idx}\n          />\n        ))}\n      </TagListContainer>\n    </TagDivisionWrapper>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"@reach/router\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { TagDictionaryWrapper } from \"./wrapper\";\nimport { DictionaryContainer } from \"./container\";\nimport { TagDivision } from \"./division\";\nimport {\n  getTagLanguageInfoDictionary,\n  isValidLanguageParam,\n} from \"../../../../utils\";\nimport { LANGUAGE, TO_TAG_BY_ENG, TO_TAG_BY_KOR } from \"../../../../constants\";\n\nexport const TagDictionarySection = () => {\n  const [loading, setLoading] = useState(true);\n  const [tagDivisionInfos, setTagDivisionInfos] = useState([]);\n  const [language, setLanguage] = useState(LANGUAGE.KO);\n  const { search } = useLocation();\n\n  const {\n    allMdx: { nodes },\n  } = useStaticQuery(AllTagDataQuery);\n\n  useEffect(() => {\n    if (!isValidLanguageParam(search)) return;\n    setLanguage(search.slice(8));\n  }, [search]);\n\n  useEffect(() => {\n    setTagDivisionInfos(\n      getTagLanguageInfoDictionary(\n        nodes.map((node) => node.frontmatter.tags),\n        language\n      )\n    );\n    setLoading(false);\n  }, [nodes, language]);\n\n  if (loading) return <></>;\n\n  return (\n    <TagDictionaryWrapper>\n      <DictionaryContainer>\n        {tagDivisionInfos.map(\n          (division, idx) =>\n            division.data.length > 0 && (\n              <TagDivision\n                key={idx}\n                division={division}\n                language={language}\n                titleFormat={\n                  language === LANGUAGE.KO ? TO_TAG_BY_KOR : TO_TAG_BY_ENG\n                }\n              />\n            )\n        )}\n      </DictionaryContainer>\n    </TagDictionaryWrapper>\n  );\n};\n\nconst AllTagDataQuery = graphql`\n  query AllTagData {\n    allMdx {\n      nodes {\n        frontmatter {\n          tags\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const NavWrapper = styled.div`\n  padding: 20px 0;\n  margin: 0 20px;\n  position: relative;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleSwitchBox = styled.ul`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n\n  padding-right: 5px;\n\n  height: 100%;\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nexport const ToggleLink = styled(Link)`\n  ${({ theme }) => theme.baseStyles([\"padding\"])};\n\n  z-index: ${({ chosen }) => (chosen === \"true\" ? \"50\" : \"10\")};\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n\n  padding: 7px;\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-bottom: none;\n\n  margin-bottom: -1px;\n\n  padding-bottom: ${({ chosen }) => (chosen === \"true\" ? \"9px\" : \"5px\")};\n\n  margin-left: 2px;\n\n  border-radius: 12px 12px 0 0;\n\n  &:hover {\n    padding-bottom: 12px;\n    z-index: 50;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const LanguageText = styled.li`\n  color: ${({ theme }) => theme.colors.textColor};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n`;\n","import React from \"react\";\nimport { ToggleLink } from \"./link\";\nimport { LanguageText } from \"./text\";\n\nexport const ToggleLanguageButton = ({\n  title,\n  innerText,\n  chosen,\n  pathToSortBy,\n}) => {\n  return (\n    <ToggleLink title={title} chosen={chosen} to={pathToSortBy}>\n      <LanguageText>{innerText}</LanguageText>\n    </ToggleLink>\n  );\n};\n","import styled from \"styled-components\";\nimport { H2 } from \"../../../common\";\n\nexport const NavContainer = styled(H2).attrs({ as: \"nav\" })`\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"@reach/router\";\nimport {\n  LANGUAGE,\n  SHOW_TAGS_BY_ENG,\n  SHOW_TAGS_BY_KOR,\n} from \"../../../../constants\";\nimport { NavWrapper } from \"./wrapper\";\nimport { ToggleSwitchBox } from \"./switch\";\nimport { isEn, isKo, isValidLanguageParam } from \"../../../../utils\";\nimport { ToggleLanguageButton } from \"./toggle\";\nimport { NavContainer } from \"./container\";\n\nexport const NavigationCaption = () => {\n  const [language, setLanguage] = useState(LANGUAGE.KO);\n  const { pathname, search } = useLocation();\n\n  useEffect(() => {\n    if (!isValidLanguageParam(search)) return;\n    setLanguage(search.slice(8));\n  }, [search]);\n\n  return (\n    <NavWrapper>\n      <NavContainer>\n        전체 태그\n        <ToggleSwitchBox>\n          <ToggleLanguageButton\n            innerText=\"한글\"\n            title={SHOW_TAGS_BY_KOR}\n            chosen={`${isKo(language)}`}\n            pathToSortBy={`${pathname}?sortBy=${LANGUAGE.KO}`}\n          />\n          <ToggleLanguageButton\n            innerText=\"ENG\"\n            title={SHOW_TAGS_BY_ENG}\n            chosen={`${isEn(language)}`}\n            pathToSortBy={`${pathname}?sortBy=${LANGUAGE.EN}`}\n          />\n        </ToggleSwitchBox>\n      </NavContainer>\n    </NavWrapper>\n  );\n};\n","import React from \"react\";\nimport { TagNavigationWrapper } from \"./wrapper\";\nimport { TagDictionarySection } from \"./tag-dictionary\";\nimport { NavigationCaption } from \"./nav\";\n\nexport const TagNavigationSection = () => {\n  return (\n    <TagNavigationWrapper>\n      <NavigationCaption />\n      <TagDictionarySection />\n    </TagNavigationWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const AllTagsPageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${({ theme }) => theme.device.maxScreenWidth} {\n    display: grid;\n    grid-template-columns: 1fr ${({ theme }) =>\n        `${theme.widthSize.RECENT_POSTS_LIST_WIDTH}px`};\n  }\n\n  ${({ theme }) => theme.preventUserSelect};\n`;\n","import React from \"react\";\nimport { RecentPostsStickySection } from \"../common/recent-posts/sticky\";\nimport { TagNavigationSection } from \"./tag-nav\";\nimport { AllTagsPageWrapper } from \"./wrapper\";\n\nexport const AllTagsSection = () => (\n  <AllTagsPageWrapper>\n    <TagNavigationSection />\n    <RecentPostsStickySection />\n  </AllTagsPageWrapper>\n);\n","import React from \"react\";\n// import { ProfileSection } from \"../components/intro/profile\";\nimport Layout from \"../components/layout\";\nimport SeoHelmet from \"../components/seo\";\nimport { AllTagsSection } from \"../components/tags\";\n\nconst Tags = () => {\n  return (\n    <>\n      <SeoHelmet\n        title=\"태그 사전\"\n        description={\n          `해당 페이지는 해당 블로그의 모든 게시글에 적용된 태그들에 대한 정보를` +\n          ` ` +\n          `한국어와 영어 태그명을 기준으로 정렬한 결과입니다.`\n        }\n        pathname=\"/tags\"\n      />\n      <Layout addDefaultMainAd={true}>\n        {/* <ProfileSection /> */}\n        <AllTagsSection />\n      </Layout>\n    </>\n  );\n};\n\nexport default Tags;\n"],"names":["CaptionBox","styled","H3","theme","fontSize","base","fontWeight","bold","PostLink","Link","device","mobile","PostWrapper","colors","grayBorder","grayTranslucent","ImageWrapper","PostInfoContainer","textColor","PostDate","Paragraph","lineHeight","big","regular","sm","grayThick","PostTitle","normal","PostTagsWrapper","PostTags","tags","useState","loading","setLoading","tagInfoDict","setTagInfoDict","useEffect","getValidTagInfoDictionary","fullTagString","map","tagKey","ko","join","length","substring","size","ImageStyles","borderRadius","RecentPost","article","slug","frontmatter","hero_image","hero_image_alt","date","title","category","categoryDic","getCategoryInfoDictionary","to","G","image","getImage","alt","imgStyle","RecentPostsContainer","RecentPosts","articles","useStaticQuery","RecentFivePostsQuery","allMdx","nodes","node","key","id","RecentPostsWrapper","maxScreenWidth","heightSize","HEADER_HEIGHT_COVERAGE","RecentPostsStickySection","TagNavigationWrapper","widthSize","MAX_SCREEN_WIDTH","RECENT_POSTS_LIST_WIDTH","TagDictionaryWrapper","backgroundColor","DictionaryContainer","TagDivisionWrapper","Caption","lg","TagListContainer","CountBox","H4","attrs","as","CountBoxWrapper","grayBoxTranslucent","Count","count","TagLink","TagName","medium","Tag","tag","language","titleFormat","TagDivision","division","caption","data","idx","TagDictionarySection","tagDivisionInfos","setTagDivisionInfos","LANGUAGE","setLanguage","search","useLocation","AllTagDataQuery","isValidLanguageParam","slice","getTagLanguageInfoDictionary","TO_TAG_BY_KOR","TO_TAG_BY_ENG","NavWrapper","ToggleSwitchBox","ToggleLink","baseStyles","chosen","LanguageText","ToggleLanguageButton","innerText","pathToSortBy","NavContainer","H2","NavigationCaption","pathname","SHOW_TAGS_BY_KOR","isKo","SHOW_TAGS_BY_ENG","isEn","TagNavigationSection","AllTagsPageWrapper","preventUserSelect","AllTagsSection","description","addDefaultMainAd"],"sourceRoot":""}