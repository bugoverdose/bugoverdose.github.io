{"version":3,"file":"component---src-pages-tags-js-06d063842dc3d23c7743.js","mappings":"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","sources":["webpack://bugoverdose/./src/components/common/recent-posts/posts/caption.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/link.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/image/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/container.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/date.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/title.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/tags/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/tags/index.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/image/styles.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/post/index.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/container.js","webpack://bugoverdose/./src/components/common/recent-posts/posts/index.js","webpack://bugoverdose/./src/components/common/recent-posts/sticky/wrapper.js","webpack://bugoverdose/./src/components/common/recent-posts/sticky/index.js","webpack://bugoverdose/./src/components/intro/profile/wrapper.js","webpack://bugoverdose/./src/components/intro/profile/image.js","webpack://bugoverdose/./src/components/intro/profile/description/container.js","webpack://bugoverdose/./src/components/intro/profile/description/block.js","webpack://bugoverdose/./src/components/intro/profile/description/link.js","webpack://bugoverdose/./src/components/intro/profile/description/index.js","webpack://bugoverdose/./src/components/intro/profile/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/container.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/caption.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/container.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/count/box.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/count/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/count/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/link.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/name.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/tag/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/division/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/tag-dictionary/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/wrapper.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/switch.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/toggle/link.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/toggle/text.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/toggle/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/container.js","webpack://bugoverdose/./src/components/tags/tag-nav/nav/index.js","webpack://bugoverdose/./src/components/tags/tag-nav/index.js","webpack://bugoverdose/./src/components/tags/wrapper.js","webpack://bugoverdose/./src/components/tags/index.js","webpack://bugoverdose/./src/pages/tags.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { H3 } from \"../..\";\n\nexport const CaptionBox = styled(H3)`\n  padding: 20px 0 0 20px;\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n`;\n","import { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nexport const PostLink = styled(Link)`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: minmax(100px, 1fr);\n\n  @media ${({ theme }) => theme.device.mobile} {\n    grid-template-columns: 100px 1fr;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const PostWrapper = styled.article`\n  border-top: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.grayTranslucent};\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const ImageWrapper = styled.div`\n  display: none;\n\n  @media ${({ theme }) => theme.device.mobile} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n\n    padding: 10px;\n\n    img {\n      height: 75px;\n      width: 75px;\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const PostInfoContainer = styled.div`\n  padding: 15px 10px;\n  color: ${({ theme }) => theme.colors.textColor};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n","import styled from \"styled-components\";\nimport { Paragraph } from \"../../..\";\n\nexport const PostDate = styled(Paragraph)`\n  margin: 0 0 10px 0;\n  padding: 0px;\n  line-height: ${({ theme }) => theme.lineHeight.big};\n  font-weight: ${({ theme }) => theme.fontWeight.regular};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  color: ${({ theme }) => theme.colors.grayThick};\n`;\n","import styled from \"styled-components\";\nimport { H3 } from \"../../..\";\n\nexport const PostTitle = styled(H3)`\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n  line-height: ${({ theme }) => theme.lineHeight.big};\n  margin-bottom: 10px;\n`;\n","import styled from \"styled-components\";\n\nexport const PostTagsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  gap: 5px;\n\n  width: 100%;\n\n  line-height: ${({ theme }) => theme.lineHeight.big};\n  font-weight: ${({ theme }) => theme.fontWeight.regular};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  color: ${({ theme }) => theme.colors.grayThick};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { getValidTagInfoDictionary } from \"../../../../../../utils\";\nimport { TagIconSolid as TagIcon } from \"../../../../icon\";\nimport { PostTagsWrapper } from \"./wrapper\";\n\nexport const PostTags = ({ tags }) => {\n  const [loading, setLoading] = useState(true);\n  const [tagInfoDict, setTagInfoDict] = useState({});\n\n  useEffect(() => {\n    setTagInfoDict(getValidTagInfoDictionary());\n    setLoading(false);\n  }, []);\n\n  if (loading) return <></>;\n\n  let fullTagString = tags?.map((tagKey) => tagInfoDict[tagKey].ko).join(\", \");\n\n  if (fullTagString.length > 28) {\n    console.log(fullTagString.substring(0, 25) + \"...\");\n  }\n\n  return (\n    <PostTagsWrapper>\n      <TagIcon size={20} />\n      <span>{fullTagString}</span>\n    </PostTagsWrapper>\n  );\n};\n","export const ImageStyles = {\n  borderRadius: \"10px\",\n};\n","import React from \"react\";\nimport { PostLink } from \"./link\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { PostWrapper } from \"./wrapper\";\nimport { ImageWrapper } from \"./image/wrapper\";\nimport { PostInfoContainer } from \"./container\";\nimport { PostDate } from \"./date\";\nimport { PostTitle } from \"./title\";\nimport { PostTags } from \"./tags\";\nimport { ImageStyles } from \"./image/styles\";\nimport { getCategoryInfoDictionary } from \"../../../../../utils\";\n\nexport const RecentPost = ({ article }) => {\n  const { slug, frontmatter } = article;\n  const { hero_image, hero_image_alt, date, title, category, tags } =\n    frontmatter;\n\n  const categoryDic = getCategoryInfoDictionary();\n\n  return (\n    <PostWrapper title={title}>\n      <PostLink to={`/${slug}`}>\n        <ImageWrapper>\n          <GatsbyImage\n            image={getImage(hero_image)}\n            alt={hero_image_alt}\n            imgStyle={ImageStyles}\n          />\n        </ImageWrapper>\n        <PostInfoContainer>\n          <PostDate>\n            {date} | {categoryDic[category].ko}\n          </PostDate>\n          <PostTitle>{title}</PostTitle>\n          <PostTags tags={tags} />\n        </PostInfoContainer>\n      </PostLink>\n    </PostWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const RecentPostsContainer = styled.ul`\n  padding: 20px;\n`;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { CaptionBox } from \"./caption\";\nimport { RecentPost } from \"./post\";\nimport { RecentPostsContainer } from \"./container\";\n\nexport const RecentPosts = () => {\n  const {\n    allMdx: { nodes: articles },\n  } = useStaticQuery(RecentFivePostsQuery);\n  return (\n    <>\n      <CaptionBox>최근 글</CaptionBox>\n      <RecentPostsContainer>\n        {articles.map((node) => (\n          <RecentPost key={node.id} article={node} />\n        ))}\n      </RecentPostsContainer>\n    </>\n  );\n};\n\nconst RecentFivePostsQuery = graphql`\n  query RecentFivePosts {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }, limit: 5) {\n      nodes {\n        frontmatter {\n          title\n          category\n          tags\n          date(formatString: \"YYYY-MM-DD\")\n          hero_image {\n            childImageSharp {\n              gatsbyImageData(width: 150, aspectRatio: 2)\n            }\n          }\n          hero_image_alt\n        }\n        id\n        slug\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const RecentPostsWrapper = styled.section`\n  margin: 0px 20px;\n\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-radius: 15px;\n\n  @media ${({ theme }) => theme.device.maxScreenWidth} {\n    margin: 0 20px 0 0;\n\n    position: -webkit-sticky;\n    position: sticky;\n    top: ${({ theme }) => theme.heightSize.HEADER_HEIGHT_COVERAGE + 5}px;\n    align-self: start;\n  }\n`;\n","import React from \"react\";\nimport { RecentPosts } from \"../posts\";\nimport { RecentPostsWrapper } from \"./wrapper\";\n\nexport const RecentPostsStickySection = () => {\n  return (\n    <RecentPostsWrapper>\n      <RecentPosts />\n    </RecentPostsWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ProfileWrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin-bottom: 30px;\n  padding: 50px 20px;\n\n  ${({ theme }) => theme.preventUserSelect};\n`;\n","export const ProfileImageWrapperStyle = {\n  minWidth: 70,\n};\n\nexport const ProfileImageStyle = {\n  borderRadius: \"50%\",\n};\n","import styled from \"styled-components\";\n\nexport const TextContainer = styled.h2`\n  display: flex;\n  flex-direction: column;\n\n  margin-left: 20px;\n\n  white-space: nowrap;\n\n  @media ${({ theme }) => theme.device.medium} {\n    flex-wrap: wrap;\n    flex-direction: row;\n  }\n`;\n","import styled from \"styled-components\";\nimport { H2 } from \"../../../common\";\n\nexport const TextBlock = styled(H2).attrs({ as: \"span\" })`\n  display: block;\n\n  line-height: ${({ theme }) => theme.lineHeight.normal};\n\n  font-size: ${({ theme }) => theme.fontSize.xl3};\n  font-family: ${({ theme }) => theme.font.monospace};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n\n  margin: 0 0 10px 0;\n\n  @media ${({ theme }) => theme.device.medium} {\n    margin: 0 15px 0 0;\n  }\n`;\n","import styled from \"styled-components\";\nimport { TextBlock } from \"./block\";\n\nexport const ProfileLink = styled(TextBlock).attrs({ as: \"a\" })`\n  color: ${({ theme }) => theme.colors.highlightColor};\n  text-decoration: underline;\n  text-underline-position: under;\n\n  display: block;\n\n  margin: 0;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n","import React from \"react\";\nimport { TextContainer } from \"./container\";\nimport { ProfileLink } from \"./link\";\nimport { TextBlock } from \"./block\";\nimport { OPEN_GITHUB } from \"../../../../constants\";\n\nexport const ProfileDescription = () => {\n  return (\n    <TextContainer>\n      <TextBlock>Dev blog by</TextBlock>\n      <ProfileLink\n        title={OPEN_GITHUB}\n        href=\"https://github.com/bugoverdose\"\n        target=\"_blank\"\n      >\n        Jeong Jinwoo\n      </ProfileLink>\n    </TextContainer>\n  );\n};\n","import React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { ProfileWrapper } from \"./wrapper\";\nimport { ProfileImageStyle, ProfileImageWrapperStyle } from \"./image\";\nimport { ProfileDescription } from \"./description\";\n\nexport const ProfileSection = () => {\n  return (\n    <ProfileWrapper>\n      <StaticImage\n        src=\"./assets/bugoverdose-profile.jpeg\"\n        alt=\"profile image of bugoverdose\"\n        height={80}\n        aspectRatio={1 / 1}\n        style={ProfileImageWrapperStyle}\n        imgStyle={ProfileImageStyle}\n        placeholder=\"dominantColor\"\n      />\n      <ProfileDescription />\n    </ProfileWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const TagNavigationWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  margin: 0px 20px 20px 20px;\n\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-radius: 15px;\n\n  @media ${({ theme }) => theme.device.maxScreenWidth} {\n    max-width: ${({\n      theme: {\n        widthSize: { MAX_SCREEN_WIDTH, RECENT_POSTS_LIST_WIDTH },\n      },\n    }) => `${MAX_SCREEN_WIDTH - RECENT_POSTS_LIST_WIDTH}px`};\n\n    margin-bottom: 0px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const TagDictionaryWrapper = styled.section`\n  margin: 0px 20px 10px 20px;\n  display: flex;\n  z-index: 30;\n  border-top: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n`;\n","import styled from \"styled-components\";\n\nexport const DictionaryContainer = styled.div`\n  width: 100%;\n\n  & > div:last-child {\n    border: none;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const TagDivisionWrapper = styled.div`\n  padding: 15px 0px;\n\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grayBorder};\n\n  @media ${({ theme }) => theme.device.maxScreenWidth} {\n    display: grid;\n    grid-template-columns: 100px 1fr;\n  }\n`;\n","import styled from \"styled-components\";\nimport { H3 } from \"../../../../common\";\n\nexport const Caption = styled(H3)`\n  padding-left: 10px;\n  padding-bottom: 20px;\n\n  color: ${({ theme }) => theme.colors.textColor};\n  font-size: ${({ theme }) => theme.fontSize.lg};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n`;\n","import styled from \"styled-components\";\n\nexport const TagListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  width: 100%;\n  padding-left: 10px;\n\n  @media ${({ theme }) => theme.device.maxScreenWidth} {\n    padding-left: 0px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { H4 } from \"../../../../../../common\";\n\nexport const CountBox = styled(H4).attrs({ as: \"span\" })`\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  font-weight: ${({ theme }) => theme.fontWeight.regular};\n  line-height: ${({ theme }) => theme.lineHeight.normal};\n`;\n","import styled from \"styled-components\";\n\nexport const CountBoxWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: ${({ theme }) => theme.colors.grayBoxTranslucent};\n  border-radius: 5px;\n\n  padding: 5px;\n  height: 100%;\n  min-width: 20px;\n`;\n","import React from \"react\";\nimport { CountBox } from \"./box\";\nimport { CountBoxWrapper } from \"./wrapper\";\n\nexport const Count = ({ count }) => {\n  return (\n    <CountBoxWrapper>\n      <CountBox>{count}</CountBox>\n    </CountBoxWrapper>\n  );\n};\n","import { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nexport const TagLink = styled(Link)`\n  display: flex;\n\n  height: 30px;\n  padding: 5px 10px;\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-radius: 15px;\n\n  margin: 0 10px 10px 0;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.grayBorder};\n  }\n`;\n","import styled from \"styled-components\";\nimport { H4 } from \"../../../../../common\";\n\nexport const TagName = styled(H4)`\n  height: 100%;\n  margin-right: 10px;\n  line-height: ${({ theme }) => theme.lineHeight.normal};\n\n  color: ${({ theme }) => theme.colors.textColor};\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n`;\n","import React from \"react\";\nimport { Count } from \"./count\";\nimport { TagLink } from \"./link\";\nimport { TagName } from \"./name\";\n\nexport const Tag = ({ tag, language, titleFormat }) => {\n  return (\n    <TagLink to={`/tag/${tag.slug}`} title={titleFormat(tag[language])}>\n      <TagName>{tag[language]}</TagName>\n      <Count count={tag.count} />\n    </TagLink>\n  );\n};\n","import React from \"react\";\nimport { TagDivisionWrapper } from \"./wrapper\";\nimport { Caption } from \"./caption\";\nimport { TagListContainer } from \"./container\";\nimport { Tag } from \"./tag\";\n\nexport const TagDivision = ({ division, language, titleFormat }) => {\n  return (\n    <TagDivisionWrapper>\n      <Caption>{division.caption}</Caption>\n      <TagListContainer>\n        {division.data.map((tag, idx) => (\n          <Tag\n            tag={tag}\n            language={language}\n            titleFormat={titleFormat}\n            key={idx}\n          />\n        ))}\n      </TagListContainer>\n    </TagDivisionWrapper>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"@reach/router\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { TagDictionaryWrapper } from \"./wrapper\";\nimport { DictionaryContainer } from \"./container\";\nimport { TagDivision } from \"./division\";\nimport {\n  getTagLanguageInfoDictionary,\n  isValidLanguageParam,\n} from \"../../../../utils\";\nimport { LANGUAGE, TO_TAG_BY_ENG, TO_TAG_BY_KOR } from \"../../../../constants\";\n\nexport const TagDictionarySection = () => {\n  const [loading, setLoading] = useState(true);\n  const [tagDivisionInfos, setTagDivisionInfos] = useState([]);\n  const [language, setLanguage] = useState(LANGUAGE.KO);\n  const { search } = useLocation();\n\n  const {\n    allMdx: { nodes },\n  } = useStaticQuery(AllTagDataQuery);\n\n  useEffect(() => {\n    if (!isValidLanguageParam(search)) return;\n    setLanguage(search.slice(8));\n  }, [search]);\n\n  useEffect(() => {\n    setTagDivisionInfos(\n      getTagLanguageInfoDictionary(\n        nodes.map((node) => node.frontmatter.tags),\n        language\n      )\n    );\n    setLoading(false);\n  }, [nodes, language]);\n\n  if (loading) return <></>;\n\n  return (\n    <TagDictionaryWrapper>\n      <DictionaryContainer>\n        {tagDivisionInfos.map(\n          (division, idx) =>\n            division.data.length > 0 && (\n              <TagDivision\n                key={idx}\n                division={division}\n                language={language}\n                titleFormat={\n                  language === LANGUAGE.KO ? TO_TAG_BY_KOR : TO_TAG_BY_ENG\n                }\n              />\n            )\n        )}\n      </DictionaryContainer>\n    </TagDictionaryWrapper>\n  );\n};\n\nconst AllTagDataQuery = graphql`\n  query AllTagData {\n    allMdx {\n      nodes {\n        frontmatter {\n          tags\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const NavWrapper = styled.div`\n  padding: 20px 0;\n  margin: 0 20px;\n  position: relative;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleSwitchBox = styled.ul`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n\n  padding-right: 5px;\n\n  height: 100%;\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nexport const ToggleLink = styled(Link)`\n  ${({ theme }) => theme.baseStyles([\"padding\"])};\n\n  z-index: ${({ chosen }) => (chosen === \"true\" ? \"50\" : \"10\")};\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n\n  padding: 7px;\n  border: 1px solid ${({ theme }) => theme.colors.grayBorder};\n  border-bottom: none;\n\n  margin-bottom: -1px;\n\n  padding-bottom: ${({ chosen }) => (chosen === \"true\" ? \"9px\" : \"5px\")};\n\n  margin-left: 2px;\n\n  border-radius: 12px 12px 0 0;\n\n  &:hover {\n    padding-bottom: 12px;\n    z-index: 50;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const LanguageText = styled.li`\n  color: ${({ theme }) => theme.colors.textColor};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n`;\n","import React from \"react\";\nimport { ToggleLink } from \"./link\";\nimport { LanguageText } from \"./text\";\n\nexport const ToggleLanguageButton = ({\n  title,\n  innerText,\n  chosen,\n  pathToSortBy,\n}) => {\n  return (\n    <ToggleLink title={title} chosen={chosen} to={pathToSortBy}>\n      <LanguageText>{innerText}</LanguageText>\n    </ToggleLink>\n  );\n};\n","import styled from \"styled-components\";\nimport { H2 } from \"../../../common\";\n\nexport const NavContainer = styled(H2).attrs({ as: \"nav\" })`\n  font-size: ${({ theme }) => theme.fontSize.base};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"@reach/router\";\nimport {\n  LANGUAGE,\n  SHOW_TAGS_BY_ENG,\n  SHOW_TAGS_BY_KOR,\n} from \"../../../../constants\";\nimport { NavWrapper } from \"./wrapper\";\nimport { ToggleSwitchBox } from \"./switch\";\nimport { isEn, isKo, isValidLanguageParam } from \"../../../../utils\";\nimport { ToggleLanguageButton } from \"./toggle\";\nimport { NavContainer } from \"./container\";\n\nexport const NavigationCaption = () => {\n  const [language, setLanguage] = useState(LANGUAGE.KO);\n  const { pathname, search } = useLocation();\n\n  useEffect(() => {\n    if (!isValidLanguageParam(search)) return;\n    setLanguage(search.slice(8));\n  }, [search]);\n\n  return (\n    <NavWrapper>\n      <NavContainer>\n        전체 태그\n        <ToggleSwitchBox>\n          <ToggleLanguageButton\n            innerText=\"한글\"\n            title={SHOW_TAGS_BY_KOR}\n            chosen={`${isKo(language)}`}\n            pathToSortBy={`${pathname}?sortBy=${LANGUAGE.KO}`}\n          />\n          <ToggleLanguageButton\n            innerText=\"ENG\"\n            title={SHOW_TAGS_BY_ENG}\n            chosen={`${isEn(language)}`}\n            pathToSortBy={`${pathname}?sortBy=${LANGUAGE.EN}`}\n          />\n        </ToggleSwitchBox>\n      </NavContainer>\n    </NavWrapper>\n  );\n};\n","import React from \"react\";\nimport { TagNavigationWrapper } from \"./wrapper\";\nimport { TagDictionarySection } from \"./tag-dictionary\";\nimport { NavigationCaption } from \"./nav\";\n\nexport const TagNavigationSection = () => {\n  return (\n    <TagNavigationWrapper>\n      <NavigationCaption />\n      <TagDictionarySection />\n    </TagNavigationWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const AllTagsPageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${({ theme }) => theme.device.maxScreenWidth} {\n    display: grid;\n    grid-template-columns: 1fr ${({ theme }) =>\n        `${theme.widthSize.RECENT_POSTS_LIST_WIDTH}px`};\n  }\n\n  ${({ theme }) => theme.preventUserSelect};\n`;\n","import React from \"react\";\nimport { RecentPostsStickySection } from \"../common/recent-posts/sticky\";\nimport { TagNavigationSection } from \"./tag-nav\";\nimport { AllTagsPageWrapper } from \"./wrapper\";\n\nexport const AllTagsSection = () => (\n  <AllTagsPageWrapper>\n    <TagNavigationSection />\n    <RecentPostsStickySection />\n  </AllTagsPageWrapper>\n);\n","import React from \"react\";\nimport { ProfileSection } from \"../components/intro/profile\";\nimport Layout from \"../components/layout\";\nimport SeoHelmet from \"../components/seo\";\nimport { AllTagsSection } from \"../components/tags\";\n\nconst Tags = () => {\n  return (\n    <>\n      <SeoHelmet\n        title=\"태그 사전\"\n        description={\n          `해당 페이지는 해당 블로그의 모든 게시글에 적용된 태그들에 대한 정보를` +\n          ` ` +\n          `한국어와 영어 태그명을 기준으로 정렬한 결과입니다.`\n        }\n        pathname=\"/tags\"\n      />\n      <Layout>\n        <ProfileSection />\n        <AllTagsSection />\n      </Layout>\n    </>\n  );\n};\n\nexport default Tags;\n"],"names":["CaptionBox","styled","H3","theme","fontSize","base","fontWeight","bold","PostLink","Link","device","mobile","PostWrapper","colors","grayBorder","grayTranslucent","ImageWrapper","PostInfoContainer","textColor","PostDate","Paragraph","lineHeight","big","regular","sm","grayThick","PostTitle","normal","PostTagsWrapper","PostTags","tags","useState","loading","setLoading","tagInfoDict","setTagInfoDict","useEffect","getValidTagInfoDictionary","fullTagString","map","tagKey","ko","join","length","console","log","substring","size","ImageStyles","borderRadius","RecentPost","article","slug","frontmatter","hero_image","hero_image_alt","date","title","category","categoryDic","getCategoryInfoDictionary","to","G","image","getImage","alt","imgStyle","RecentPostsContainer","RecentPosts","articles","useStaticQuery","RecentFivePostsQuery","allMdx","nodes","node","key","id","RecentPostsWrapper","maxScreenWidth","heightSize","HEADER_HEIGHT_COVERAGE","RecentPostsStickySection","ProfileWrapper","preventUserSelect","ProfileImageWrapperStyle","minWidth","ProfileImageStyle","TextContainer","medium","TextBlock","H2","attrs","as","xl3","font","monospace","ProfileLink","highlightColor","ProfileDescription","OPEN_GITHUB","href","target","ProfileSection","S","src","height","aspectRatio","style","placeholder","TagNavigationWrapper","widthSize","MAX_SCREEN_WIDTH","RECENT_POSTS_LIST_WIDTH","TagDictionaryWrapper","backgroundColor","DictionaryContainer","TagDivisionWrapper","Caption","lg","TagListContainer","CountBox","H4","CountBoxWrapper","grayBoxTranslucent","Count","count","TagLink","TagName","Tag","tag","language","titleFormat","TagDivision","division","caption","data","idx","TagDictionarySection","tagDivisionInfos","setTagDivisionInfos","LANGUAGE","setLanguage","search","useLocation","AllTagDataQuery","isValidLanguageParam","slice","getTagLanguageInfoDictionary","TO_TAG_BY_KOR","TO_TAG_BY_ENG","NavWrapper","ToggleSwitchBox","ToggleLink","baseStyles","chosen","LanguageText","ToggleLanguageButton","innerText","pathToSortBy","NavContainer","NavigationCaption","pathname","SHOW_TAGS_BY_KOR","isKo","SHOW_TAGS_BY_ENG","isEn","TagNavigationSection","AllTagsPageWrapper","AllTagsSection","description"],"sourceRoot":""}