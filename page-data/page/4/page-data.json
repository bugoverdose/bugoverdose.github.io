{
    "componentChunkName": "component---src-templates-home-js",
    "path": "/page/4",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"title":"[Swagger] JWT 인증 버튼 셋업","description":"Swagger UI 페이지에서 Authorize 버튼을 등록해보자. 특히 Authorization 헤더에 토큰을 설정할 때 'Bearer'라는 문자열이 자동으로 추가되도록 설정하는 방법을 알아보자.","date":"June 5, 2022","category":"development","tags":["spring","swagger","authentication","authorization","dev-tools","api"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ca7d3536aab0795872bb01c57b44111f/12a3e/swagger-wide.png","srcSet":"/static/ca7d3536aab0795872bb01c57b44111f/9d9e0/swagger-wide.png 225w,\n/static/ca7d3536aab0795872bb01c57b44111f/cc174/swagger-wide.png 450w,\n/static/ca7d3536aab0795872bb01c57b44111f/12a3e/swagger-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/ca7d3536aab0795872bb01c57b44111f/3f003/swagger-wide.webp 225w,\n/static/ca7d3536aab0795872bb01c57b44111f/ba134/swagger-wide.webp 450w,\n/static/ca7d3536aab0795872bb01c57b44111f/e7f7d/swagger-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"swagger image"},"id":"0ab6e5ae-80b4-50a5-8dcc-82f9e50fab01","slug":"development/swagger-auth-tutorial/"},{"frontmatter":{"title":"[Swagger] API 문서 자동화","description":"API 문서화 및 관리 툴인 Swagger에 입문해보자. Postman처럼 서버에 실제로 요청을 보낼 수 있을 뿐만 아니라, API 명세를 자동으로 생성할 수 있다는 점은 Swagger가 지닌 확실한 장점이다.","date":"May 28, 2022","category":"development","tags":["swagger","dev-tools","api","spring"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ca7d3536aab0795872bb01c57b44111f/12a3e/swagger-wide.png","srcSet":"/static/ca7d3536aab0795872bb01c57b44111f/9d9e0/swagger-wide.png 225w,\n/static/ca7d3536aab0795872bb01c57b44111f/cc174/swagger-wide.png 450w,\n/static/ca7d3536aab0795872bb01c57b44111f/12a3e/swagger-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/ca7d3536aab0795872bb01c57b44111f/3f003/swagger-wide.webp 225w,\n/static/ca7d3536aab0795872bb01c57b44111f/ba134/swagger-wide.webp 450w,\n/static/ca7d3536aab0795872bb01c57b44111f/e7f7d/swagger-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"swagger image"},"id":"dcd3beaf-7346-5818-9ee0-dd4da36ef76f","slug":"development/swagger-tutorial/"},{"frontmatter":{"title":"[Java] 데코레이터 패턴: 구현과 한계","description":"데코레이터 패턴을 통해 특정한 데이터에 대해 일련의 작업을 순차적으로 적용하는 구조를 만들어보자. 그리고 이러한 코드의 한계에 대하여 논해보자. 유연한 코드의 이면에는 구조의 복잡성이 자리잡고 있다.","date":"May 26, 2022","category":"development","tags":["java","decorator-pattern","design-pattern"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/92b247c93aece14a68001c0de2d469e0/12a3e/decorator-pattern-wide.png","srcSet":"/static/92b247c93aece14a68001c0de2d469e0/9d9e0/decorator-pattern-wide.png 225w,\n/static/92b247c93aece14a68001c0de2d469e0/cc174/decorator-pattern-wide.png 450w,\n/static/92b247c93aece14a68001c0de2d469e0/12a3e/decorator-pattern-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/92b247c93aece14a68001c0de2d469e0/3f003/decorator-pattern-wide.webp 225w,\n/static/92b247c93aece14a68001c0de2d469e0/ba134/decorator-pattern-wide.webp 450w,\n/static/92b247c93aece14a68001c0de2d469e0/e7f7d/decorator-pattern-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"decorator pattern image"},"id":"c9b13bab-4f76-5fe3-852b-52ce33f4edb4","slug":"development/decorator-pattern-implementation-and-limitations/"},{"frontmatter":{"title":"[Java] 어댑터 패턴과 OCP","description":"어댑터 패턴을 통해 외부 라이브러리에 대한 의존성을 도메인으로부터 분리하는 과정을 다룬다. 추상화에 대한 의존과 객체의 사용과 생성의 분리라는 관점에서 OCP에 부합하도록 클라이언트 코드를 리팩토링해보자.","date":"May 25, 2022","category":"development","tags":["java","adapter","design-pattern","ocp"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/386828e1664f43a583c6ae4b70a678fc/12a3e/adapter-pattern-wide.png","srcSet":"/static/386828e1664f43a583c6ae4b70a678fc/9d9e0/adapter-pattern-wide.png 225w,\n/static/386828e1664f43a583c6ae4b70a678fc/cc174/adapter-pattern-wide.png 450w,\n/static/386828e1664f43a583c6ae4b70a678fc/12a3e/adapter-pattern-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/386828e1664f43a583c6ae4b70a678fc/3f003/adapter-pattern-wide.webp 225w,\n/static/386828e1664f43a583c6ae4b70a678fc/ba134/adapter-pattern-wide.webp 450w,\n/static/386828e1664f43a583c6ae4b70a678fc/e7f7d/adapter-pattern-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"adapter pattern image"},"id":"9f8b3080-ccce-59ad-af78-88f90d17b374","slug":"development/adapter-pattern-and-ocp/"},{"frontmatter":{"title":"[Java] JGraphT 라이브러리를 통한 최단경로 조회","description":"해당 게시글은 jgrapht 라이브러리를 활용하는 다양한 방법에 대한 예시 코드를 제공한다. 특히 기존 도메인을 수정하지 않고 최단경로를 구간들의 목록으로 반환받는 방법에 대한 탐구 과정을 단계별로 정리하였다.","date":"May 24, 2022","category":"development","tags":["java","jgrapht","algorithm","proxy"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/5e50e0a8f4a1c7580f11aa380feb0308/12a3e/jgrapht-wide.png","srcSet":"/static/5e50e0a8f4a1c7580f11aa380feb0308/9d9e0/jgrapht-wide.png 225w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/cc174/jgrapht-wide.png 450w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/12a3e/jgrapht-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/5e50e0a8f4a1c7580f11aa380feb0308/3f003/jgrapht-wide.webp 225w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/ba134/jgrapht-wide.webp 450w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/e7f7d/jgrapht-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"jgrapht image"},"id":"f390eb87-c39d-5091-89d3-606513f0def8","slug":"development/finding-shortest-path-with-jgrapht/"},{"frontmatter":{"title":"[번역] IoC 컨테이너와 빈 개요","description":"스프링 프레임워크 공식문서의 Core Technologies 섹션 중 IoC 컨테이너와 빈의 개요에 대한 번역","date":"May 23, 2022","category":"docs","tags":["spring","ioc-container","bean","configuration-metadata","translation"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/df4fdef3f5596646e1f54a1121489f1d/12a3e/spring-framework-wide.png","srcSet":"/static/df4fdef3f5596646e1f54a1121489f1d/9d9e0/spring-framework-wide.png 225w,\n/static/df4fdef3f5596646e1f54a1121489f1d/cc174/spring-framework-wide.png 450w,\n/static/df4fdef3f5596646e1f54a1121489f1d/12a3e/spring-framework-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/df4fdef3f5596646e1f54a1121489f1d/3f003/spring-framework-wide.webp 225w,\n/static/df4fdef3f5596646e1f54a1121489f1d/ba134/spring-framework-wide.webp 450w,\n/static/df4fdef3f5596646e1f54a1121489f1d/e7f7d/spring-framework-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"spring framework logo image"},"id":"68f6e1c2-29c8-5fc9-9a8b-1fc7226995c5","slug":"docs/spring/framework/core/ioc-container/container-and-bean-overview/"},{"frontmatter":{"title":"[번역] 스프링 프레임워크 개요","description":"스프링 프레임워크 공식문서의 Overview 섹션에 대한 번역","date":"May 8, 2022","category":"docs","tags":["spring","translation"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/df4fdef3f5596646e1f54a1121489f1d/12a3e/spring-framework-wide.png","srcSet":"/static/df4fdef3f5596646e1f54a1121489f1d/9d9e0/spring-framework-wide.png 225w,\n/static/df4fdef3f5596646e1f54a1121489f1d/cc174/spring-framework-wide.png 450w,\n/static/df4fdef3f5596646e1f54a1121489f1d/12a3e/spring-framework-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/df4fdef3f5596646e1f54a1121489f1d/3f003/spring-framework-wide.webp 225w,\n/static/df4fdef3f5596646e1f54a1121489f1d/ba134/spring-framework-wide.webp 450w,\n/static/df4fdef3f5596646e1f54a1121489f1d/e7f7d/spring-framework-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"spring framework logo image"},"id":"e9c61615-1825-5331-855d-993b181f2264","slug":"docs/spring/framework/overview/"},{"frontmatter":{"title":"[OOP] SOLID 압축 정리본","description":"우아한테크코스 레벨 인터뷰 준비 과정에서 작성한 SOLID에 대한 개념 정리이다. 너무 깊지도, 얕지도 않도록 최소한의 예제만을 활용한 압축본을 만드는 것을 목표로 하였다. 오브젝트 스터디 종료 후 수정할 계획이다.","date":"April 26, 2022","category":"computer-science","tags":["oop","srp","ocp","lsp","isp","dip"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/782dfc0465da57291e95692f6860f8f8/12a3e/solid-wide.png","srcSet":"/static/782dfc0465da57291e95692f6860f8f8/9d9e0/solid-wide.png 225w,\n/static/782dfc0465da57291e95692f6860f8f8/cc174/solid-wide.png 450w,\n/static/782dfc0465da57291e95692f6860f8f8/12a3e/solid-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/782dfc0465da57291e95692f6860f8f8/3f003/solid-wide.webp 225w,\n/static/782dfc0465da57291e95692f6860f8f8/ba134/solid-wide.webp 450w,\n/static/782dfc0465da57291e95692f6860f8f8/e7f7d/solid-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"solid image"},"id":"31c53484-fab6-5a85-866c-46c21dd3e22c","slug":"computer-science/solid-basics/"},{"frontmatter":{"title":"[보안] 비밀번호 암호화: 해쉬와 솔트","description":"DB에 비밀번호를 변형시킨 값을 저장해놓으면 DB 정보가 외부에 유출되더라도 이를 쉽게 악용하기 힘들어진다. 솔트와 해쉬 함수를 활용하여 비밀번호의 해쉬 값을 생성하고 이를 DB에 저장하는 기법을 생각해볼 수 있다.","date":"April 25, 2022","category":"development","tags":["db","hash","security","authentication"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a0b1a282a327616498079b1e732fe0d1/12a3e/hashing-password-wide.png","srcSet":"/static/a0b1a282a327616498079b1e732fe0d1/9d9e0/hashing-password-wide.png 225w,\n/static/a0b1a282a327616498079b1e732fe0d1/cc174/hashing-password-wide.png 450w,\n/static/a0b1a282a327616498079b1e732fe0d1/12a3e/hashing-password-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/a0b1a282a327616498079b1e732fe0d1/3f003/hashing-password-wide.webp 225w,\n/static/a0b1a282a327616498079b1e732fe0d1/ba134/hashing-password-wide.webp 450w,\n/static/a0b1a282a327616498079b1e732fe0d1/e7f7d/hashing-password-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"hashing password image"},"id":"6976b79c-69ee-531c-9bc9-a19004687749","slug":"development/hashing-password-with-salt/"},{"frontmatter":{"title":"[Java] 스트림: 지연 연산과 최적화","description":"Stream API의 주요 특성인 지연 연산의 의미, 그리고 이를 기반으로 일어나는 루프퓨전과 쇼트서킷에 대해 알아보자. Stream API가 스트림이라고 불릴 수 있는 원인이 바로 여기에 있는 것으로 보인다.","date":"April 13, 2022","category":"development","tags":["java","modern-java","stream","lazy","short-circuit"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/4ec343a30ea3d448be1f1cc966c7efbe/12a3e/lazy-stream-wide.png","srcSet":"/static/4ec343a30ea3d448be1f1cc966c7efbe/9d9e0/lazy-stream-wide.png 225w,\n/static/4ec343a30ea3d448be1f1cc966c7efbe/cc174/lazy-stream-wide.png 450w,\n/static/4ec343a30ea3d448be1f1cc966c7efbe/12a3e/lazy-stream-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/4ec343a30ea3d448be1f1cc966c7efbe/3f003/lazy-stream-wide.webp 225w,\n/static/4ec343a30ea3d448be1f1cc966c7efbe/ba134/lazy-stream-wide.webp 450w,\n/static/4ec343a30ea3d448be1f1cc966c7efbe/e7f7d/lazy-stream-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"lazy stream image"},"id":"b2d9b6b1-1451-572f-be95-5668ca721bdc","slug":"development/stream-lazy-evaluation/"}],"pageInfo":{"currentPage":4,"hasNextPage":true,"hasPreviousPage":true,"pageCount":6,"totalCount":51}}},"pageContext":{"skip":30}},
    "staticQueryHashes": ["1903006949","2193720160"]}