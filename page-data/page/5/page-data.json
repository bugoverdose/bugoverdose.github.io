{
    "componentChunkName": "component---src-templates-home-js",
    "path": "/page/5",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"title":"[번역] 커넥션 풀 사이즈에 대하여","description":"HikariCP 공식 위키의 'About Pool Sizing' 페이지에 대한 번역입니다. 최적의 성능을 위해 데이터베이스 커넥션 풀 크기를 어떻게 설정해야 하는지에 대해 다룹니다.","date":"September 25, 2022","category":"docs","tags":["db","data-access","connection-pool","translation"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f39058da346fa14a151dc0d221255501/12a3e/connection-pool-wide.png","srcSet":"/static/f39058da346fa14a151dc0d221255501/9d9e0/connection-pool-wide.png 225w,\n/static/f39058da346fa14a151dc0d221255501/cc174/connection-pool-wide.png 450w,\n/static/f39058da346fa14a151dc0d221255501/12a3e/connection-pool-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/f39058da346fa14a151dc0d221255501/3f003/connection-pool-wide.webp 225w,\n/static/f39058da346fa14a151dc0d221255501/ba134/connection-pool-wide.webp 450w,\n/static/f39058da346fa14a151dc0d221255501/e7f7d/connection-pool-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"connection pool image"},"id":"378afb45-df0b-5474-b190-2011c9fc35e7","slug":"docs/database-connection-pool-sizing/"},{"frontmatter":{"title":"[토이 프로젝트] MyS3: 나만의 작은 이미지 호스팅 서버","description":"AWS S3를 사용할 수 없게 되어 EC2 인스턴스에서 실행가능한 대체품을 만들어보았습니다. 이미지 파일 업로드 및 조회 API를 제공하며, 업로드된 파일을 로컬 머신에서 직접 관리하는 구조입니다.","date":"August 7, 2022","category":"development","tags":["java","project"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/85856f0bf522c0cc6abb8ae80b40652e/12a3e/mys3-wide.png","srcSet":"/static/85856f0bf522c0cc6abb8ae80b40652e/9d9e0/mys3-wide.png 225w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/cc174/mys3-wide.png 450w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/12a3e/mys3-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/85856f0bf522c0cc6abb8ae80b40652e/3f003/mys3-wide.webp 225w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/ba134/mys3-wide.webp 450w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/e7f7d/mys3-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"MyS3 image"},"id":"9c951dfe-90b0-5020-9d36-6ea16a2f52ec","slug":"development/image-hosting-server-toy-project/"},{"frontmatter":{"title":"[Spring] Profile: yml 파일 하나로 프로퍼티 관리하기","description":"application.yml 파일을 .gitignore에 넣는다거나, EC2 인스턴스에 yml 파일을 올려놓는 등의 행동을 하는 크루들이 많아 보여 제 방식을 정리해보았습니다. 튜토리얼과 실전 예제를 포함시켰습니다.","date":"July 29, 2022","category":"development","tags":["spring","property","jvm","linux"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/df2da7a1a0c15ebdbc88e98be8f29d11/12a3e/application.yml-wide.png","srcSet":"/static/df2da7a1a0c15ebdbc88e98be8f29d11/9d9e0/application.yml-wide.png 225w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/cc174/application.yml-wide.png 450w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/12a3e/application.yml-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/df2da7a1a0c15ebdbc88e98be8f29d11/3f003/application.yml-wide.webp 225w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/ba134/application.yml-wide.webp 450w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/e7f7d/application.yml-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"application.yml wide image"},"id":"244ff11b-e662-51ec-99e5-003c28cc582c","slug":"development/spring-profile-and-environment-variables-tutorial/"},{"frontmatter":{"title":"[리뷰] 오브젝트 독후감","description":"스터디원들과 함께 조영호의 오브젝트를 완독하였다. 책에 대한 전반적인 후기를 남기고자 한다.","date":"June 24, 2022","category":"essay","tags":["oop","book-review","retrospective"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/df533aab78ad2ace48ba0128fca14494/12a3e/object-cover-wide.png","srcSet":"/static/df533aab78ad2ace48ba0128fca14494/9d9e0/object-cover-wide.png 225w,\n/static/df533aab78ad2ace48ba0128fca14494/cc174/object-cover-wide.png 450w,\n/static/df533aab78ad2ace48ba0128fca14494/12a3e/object-cover-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/df533aab78ad2ace48ba0128fca14494/3f003/object-cover-wide.webp 225w,\n/static/df533aab78ad2ace48ba0128fca14494/ba134/object-cover-wide.webp 450w,\n/static/df533aab78ad2ace48ba0128fca14494/e7f7d/object-cover-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"object cover image"},"id":"8e1da8a7-0683-55c7-a353-8e4ff8f3e14e","slug":"essay/object-book-review/"},{"frontmatter":{"title":"[Swagger] 스프링부트 2버전에서 API 명세 자동화하기","description":"스프링부트 2버전에서 API 문서화 및 관리 툴인 Swagger를 셋업해봅시다. Postman처럼 서버에 실제로 요청을 보낼 수 있는 API 명세를 자동으로 생성할 수 있다는 점은 스웨거가 지닌 명확한 장점입니다.","date":"May 28, 2022","category":"development","tags":["spring","swagger","dev-tools","api"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ab4ea481e8fe17c04e9ac086460460f6/12a3e/swagger-tutorial-wide.png","srcSet":"/static/ab4ea481e8fe17c04e9ac086460460f6/9d9e0/swagger-tutorial-wide.png 225w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/cc174/swagger-tutorial-wide.png 450w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/12a3e/swagger-tutorial-wide.png 900w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/4dd11/swagger-tutorial-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/ab4ea481e8fe17c04e9ac086460460f6/3f003/swagger-tutorial-wide.webp 225w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/ba134/swagger-tutorial-wide.webp 450w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/e7f7d/swagger-tutorial-wide.webp 900w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/fc420/swagger-tutorial-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"swagger image"},"id":"dcd3beaf-7346-5818-9ee0-dd4da36ef76f","slug":"development/swagger-tutorial/"},{"frontmatter":{"title":"[Java] 데코레이터 패턴: 구현과 한계","description":"데코레이터 패턴을 통해 특정한 데이터에 대해 일련의 작업을 순차적으로 적용하는 구조를 만들어보자. 그리고 이러한 코드의 한계에 대하여 논해보자. 유연한 코드의 이면에는 구조의 복잡성이 자리잡고 있다.","date":"May 26, 2022","category":"development","tags":["java","decorator-pattern","design-pattern"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/92b247c93aece14a68001c0de2d469e0/12a3e/decorator-pattern-wide.png","srcSet":"/static/92b247c93aece14a68001c0de2d469e0/9d9e0/decorator-pattern-wide.png 225w,\n/static/92b247c93aece14a68001c0de2d469e0/cc174/decorator-pattern-wide.png 450w,\n/static/92b247c93aece14a68001c0de2d469e0/12a3e/decorator-pattern-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/92b247c93aece14a68001c0de2d469e0/3f003/decorator-pattern-wide.webp 225w,\n/static/92b247c93aece14a68001c0de2d469e0/ba134/decorator-pattern-wide.webp 450w,\n/static/92b247c93aece14a68001c0de2d469e0/e7f7d/decorator-pattern-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"decorator pattern image"},"id":"c9b13bab-4f76-5fe3-852b-52ce33f4edb4","slug":"development/decorator-pattern-implementation-and-limitations/"},{"frontmatter":{"title":"[Java] 어댑터 패턴과 OCP","description":"어댑터 패턴을 통해 외부 라이브러리에 대한 의존성을 도메인으로부터 분리하는 과정을 다룬다. 추상화에 대한 의존과 객체의 사용과 생성의 분리라는 관점에서 OCP에 부합하도록 클라이언트 코드를 리팩토링해보자.","date":"May 25, 2022","category":"development","tags":["java","adapter","design-pattern","ocp"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/386828e1664f43a583c6ae4b70a678fc/12a3e/adapter-pattern-wide.png","srcSet":"/static/386828e1664f43a583c6ae4b70a678fc/9d9e0/adapter-pattern-wide.png 225w,\n/static/386828e1664f43a583c6ae4b70a678fc/cc174/adapter-pattern-wide.png 450w,\n/static/386828e1664f43a583c6ae4b70a678fc/12a3e/adapter-pattern-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/386828e1664f43a583c6ae4b70a678fc/3f003/adapter-pattern-wide.webp 225w,\n/static/386828e1664f43a583c6ae4b70a678fc/ba134/adapter-pattern-wide.webp 450w,\n/static/386828e1664f43a583c6ae4b70a678fc/e7f7d/adapter-pattern-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"adapter pattern image"},"id":"9f8b3080-ccce-59ad-af78-88f90d17b374","slug":"development/adapter-pattern-and-ocp/"},{"frontmatter":{"title":"[Java] JGraphT 라이브러리를 통한 최단경로 조회","description":"해당 게시글은 jgrapht 라이브러리를 활용하는 다양한 방법에 대한 예시 코드를 제공한다. 특히 기존 도메인을 수정하지 않고 최단경로를 구간들의 목록으로 반환받는 방법에 대한 탐구 과정을 단계별로 정리하였다.","date":"May 24, 2022","category":"development","tags":["java","jgrapht","algorithm","proxy","dijkstra"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/5e50e0a8f4a1c7580f11aa380feb0308/12a3e/jgrapht-wide.png","srcSet":"/static/5e50e0a8f4a1c7580f11aa380feb0308/9d9e0/jgrapht-wide.png 225w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/cc174/jgrapht-wide.png 450w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/12a3e/jgrapht-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/5e50e0a8f4a1c7580f11aa380feb0308/3f003/jgrapht-wide.webp 225w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/ba134/jgrapht-wide.webp 450w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/e7f7d/jgrapht-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"jgrapht image"},"id":"f390eb87-c39d-5091-89d3-606513f0def8","slug":"development/finding-shortest-path-with-jgrapht/"},{"frontmatter":{"title":"[번역] IoC 컨테이너와 빈 개요","description":"스프링 프레임워크 공식문서의 Core Technologies 섹션 중 IoC 컨테이너와 빈의 개요에 대한 번역","date":"May 23, 2022","category":"docs","tags":["spring","ioc-container","bean","configuration-metadata","translation"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/df4fdef3f5596646e1f54a1121489f1d/12a3e/spring-framework-wide.png","srcSet":"/static/df4fdef3f5596646e1f54a1121489f1d/9d9e0/spring-framework-wide.png 225w,\n/static/df4fdef3f5596646e1f54a1121489f1d/cc174/spring-framework-wide.png 450w,\n/static/df4fdef3f5596646e1f54a1121489f1d/12a3e/spring-framework-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/df4fdef3f5596646e1f54a1121489f1d/3f003/spring-framework-wide.webp 225w,\n/static/df4fdef3f5596646e1f54a1121489f1d/ba134/spring-framework-wide.webp 450w,\n/static/df4fdef3f5596646e1f54a1121489f1d/e7f7d/spring-framework-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"spring framework logo image"},"id":"68f6e1c2-29c8-5fc9-9a8b-1fc7226995c5","slug":"docs/spring/framework/core/ioc-container/container-and-bean-overview/"},{"frontmatter":{"title":"[번역] 스프링 프레임워크 개요","description":"스프링 프레임워크 공식문서의 Overview 섹션에 대한 번역","date":"May 8, 2022","category":"docs","tags":["spring","translation"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/df4fdef3f5596646e1f54a1121489f1d/12a3e/spring-framework-wide.png","srcSet":"/static/df4fdef3f5596646e1f54a1121489f1d/9d9e0/spring-framework-wide.png 225w,\n/static/df4fdef3f5596646e1f54a1121489f1d/cc174/spring-framework-wide.png 450w,\n/static/df4fdef3f5596646e1f54a1121489f1d/12a3e/spring-framework-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/df4fdef3f5596646e1f54a1121489f1d/3f003/spring-framework-wide.webp 225w,\n/static/df4fdef3f5596646e1f54a1121489f1d/ba134/spring-framework-wide.webp 450w,\n/static/df4fdef3f5596646e1f54a1121489f1d/e7f7d/spring-framework-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"spring framework logo image"},"id":"e9c61615-1825-5331-855d-993b181f2264","slug":"docs/spring/framework/overview/"}],"pageInfo":{"currentPage":5,"hasNextPage":true,"hasPreviousPage":true,"pageCount":7,"totalCount":64}}},"pageContext":{"skip":40}},
    "staticQueryHashes": ["1903006949","2193720160"]}