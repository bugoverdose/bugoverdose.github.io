{
    "componentChunkName": "component---src-templates-category-js",
    "path": "/category/development/page/2",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"title":"[C++] 복사 생성자 문법","description":"C++의 복사 생성자는 매개변수로 같은 타입의 객체를 넘겨받고 그 내용을 복사하여 생성하는 생성자입니다. 복사 생성자의 호출 시점, 디폴트 복사 생성자, 얕은 복사와 깊은 복사, explicit 키워드에 대해 정리하겠습니다.","date":"May 28, 2024","category":"development","tags":["cpp","copy-constructor","explicit-keyword","shallow-copy","deep-copy","syntax"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/2f86c9d2a7d8fbc75d1df79e1f68ea22/12a3e/cpp-copy-constructor-syntax-wide.png","srcSet":"/static/2f86c9d2a7d8fbc75d1df79e1f68ea22/9d9e0/cpp-copy-constructor-syntax-wide.png 225w,\n/static/2f86c9d2a7d8fbc75d1df79e1f68ea22/cc174/cpp-copy-constructor-syntax-wide.png 450w,\n/static/2f86c9d2a7d8fbc75d1df79e1f68ea22/12a3e/cpp-copy-constructor-syntax-wide.png 900w,\n/static/2f86c9d2a7d8fbc75d1df79e1f68ea22/4dd11/cpp-copy-constructor-syntax-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/2f86c9d2a7d8fbc75d1df79e1f68ea22/3f003/cpp-copy-constructor-syntax-wide.webp 225w,\n/static/2f86c9d2a7d8fbc75d1df79e1f68ea22/ba134/cpp-copy-constructor-syntax-wide.webp 450w,\n/static/2f86c9d2a7d8fbc75d1df79e1f68ea22/e7f7d/cpp-copy-constructor-syntax-wide.webp 900w,\n/static/2f86c9d2a7d8fbc75d1df79e1f68ea22/fc420/cpp-copy-constructor-syntax-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"cpp copy constructor syntax image"},"id":"6c5c012b-2304-5a29-a9e9-dcb1f44c4d99","slug":"development/cpp-copy-constructor-syntax/"},{"frontmatter":{"title":"[C++] 참조자 문법 정리","description":"C++에서 참조자는 특정 변수가 가리키는 메모리 공간을 가리키는 또 하나의 식별자를 생성하는 문법입니다. 포인터와의 차이점, const 참조자, 선언 가능 범위, 매개변수 및 반환형 위치의 참조자 등에 대해 정리해보고자 합니다.","date":"May 6, 2024","category":"development","tags":["cpp","reference-syntax","syntax"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/862b00f9989397b428b1f96cb697dc8a/12a3e/cpp-reference-syntax-wide.png","srcSet":"/static/862b00f9989397b428b1f96cb697dc8a/9d9e0/cpp-reference-syntax-wide.png 225w,\n/static/862b00f9989397b428b1f96cb697dc8a/cc174/cpp-reference-syntax-wide.png 450w,\n/static/862b00f9989397b428b1f96cb697dc8a/12a3e/cpp-reference-syntax-wide.png 900w,\n/static/862b00f9989397b428b1f96cb697dc8a/4dd11/cpp-reference-syntax-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/862b00f9989397b428b1f96cb697dc8a/3f003/cpp-reference-syntax-wide.webp 225w,\n/static/862b00f9989397b428b1f96cb697dc8a/ba134/cpp-reference-syntax-wide.webp 450w,\n/static/862b00f9989397b428b1f96cb697dc8a/e7f7d/cpp-reference-syntax-wide.webp 900w,\n/static/862b00f9989397b428b1f96cb697dc8a/fc420/cpp-reference-syntax-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"cpp reference syntax image"},"id":"c89d17a4-48db-556d-8da1-b6662b3a129a","slug":"development/cpp-reference-syntax/"},{"frontmatter":{"title":"[Swagger] 인터페이스로 어노테이션 분리하기","description":"스프링에서 스웨거를 활용하다보면 컨트롤러에 각종 스웨거 어노테이션을 추가할 일이 생깁니다. 자바 인터페이스를 활용하여 문서화 관련 어노테이션을 컨트롤러로부터 분리해봅시다.","date":"March 27, 2024","category":"development","tags":["spring","swagger","annotation","java","interface","dev-tools","api"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/bf7f55d67a0f66bd2b00ace418fee239/12a3e/swagger-annotations-with-interface-wide.png","srcSet":"/static/bf7f55d67a0f66bd2b00ace418fee239/9d9e0/swagger-annotations-with-interface-wide.png 225w,\n/static/bf7f55d67a0f66bd2b00ace418fee239/cc174/swagger-annotations-with-interface-wide.png 450w,\n/static/bf7f55d67a0f66bd2b00ace418fee239/12a3e/swagger-annotations-with-interface-wide.png 900w,\n/static/bf7f55d67a0f66bd2b00ace418fee239/4dd11/swagger-annotations-with-interface-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/bf7f55d67a0f66bd2b00ace418fee239/3f003/swagger-annotations-with-interface-wide.webp 225w,\n/static/bf7f55d67a0f66bd2b00ace418fee239/ba134/swagger-annotations-with-interface-wide.webp 450w,\n/static/bf7f55d67a0f66bd2b00ace418fee239/e7f7d/swagger-annotations-with-interface-wide.webp 900w,\n/static/bf7f55d67a0f66bd2b00ace418fee239/fc420/swagger-annotations-with-interface-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"swagger image"},"id":"3aab9e4c-49c4-52cd-9b0f-8afa4b7bb06d","slug":"development/swagger-separate-annotations-with-interface/"},{"frontmatter":{"title":"[Swagger] JWT 인증 버튼 셋업 (feat. Bearer 인증)","description":"스웨거를 통해 요청을 보낼 때마다 Authorization 헤더에 매번 JWT 토큰을 입력하는 것은 번거롭습니다. 딱 한번만 JWT 토큰을 설정하고 재활용할 수 있도록 Authorize 버튼을 설정해봅시다.","date":"February 21, 2024","category":"development","tags":["spring","swagger","authentication","authorization","dev-tools","api"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/2d0f0c347f51ad90899272bbec540c2f/12a3e/swagger-wide.png","srcSet":"/static/2d0f0c347f51ad90899272bbec540c2f/9d9e0/swagger-wide.png 225w,\n/static/2d0f0c347f51ad90899272bbec540c2f/cc174/swagger-wide.png 450w,\n/static/2d0f0c347f51ad90899272bbec540c2f/12a3e/swagger-wide.png 900w,\n/static/2d0f0c347f51ad90899272bbec540c2f/4dd11/swagger-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/2d0f0c347f51ad90899272bbec540c2f/3f003/swagger-wide.webp 225w,\n/static/2d0f0c347f51ad90899272bbec540c2f/ba134/swagger-wide.webp 450w,\n/static/2d0f0c347f51ad90899272bbec540c2f/e7f7d/swagger-wide.webp 900w,\n/static/2d0f0c347f51ad90899272bbec540c2f/fc420/swagger-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"swagger image"},"id":"0ab6e5ae-80b4-50a5-8dcc-82f9e50fab01","slug":"development/swagger-auth-tutorial/"},{"frontmatter":{"title":"[Swagger] 스프링부트 2버전에서 API 명세 자동화하기","description":"스프링부트 2버전에서 API 문서화 및 관리 툴인 Swagger를 셋업해봅시다. Postman처럼 서버에 실제로 요청을 보낼 수 있는 API 명세를 자동으로 생성할 수 있다는 점은 스웨거가 지닌 명확한 장점입니다.","date":"February 18, 2024","category":"development","tags":["spring","swagger","dev-tools","api"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ab4ea481e8fe17c04e9ac086460460f6/12a3e/swagger-tutorial-wide.png","srcSet":"/static/ab4ea481e8fe17c04e9ac086460460f6/9d9e0/swagger-tutorial-wide.png 225w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/cc174/swagger-tutorial-wide.png 450w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/12a3e/swagger-tutorial-wide.png 900w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/4dd11/swagger-tutorial-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/ab4ea481e8fe17c04e9ac086460460f6/3f003/swagger-tutorial-wide.webp 225w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/ba134/swagger-tutorial-wide.webp 450w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/e7f7d/swagger-tutorial-wide.webp 900w,\n/static/ab4ea481e8fe17c04e9ac086460460f6/fc420/swagger-tutorial-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"swagger image"},"id":"dcd3beaf-7346-5818-9ee0-dd4da36ef76f","slug":"development/swagger-tutorial/"},{"frontmatter":{"title":"[쿠키런] 데이터 기반 조합 추천 시스템 구현 이야기","description":"[쿠키런: 오븐브레이크]라는 게임의 조합 추천 시스템의 개발 과정에 대한 NDC 발표 영상을 정리해보았습니다.","date":"January 9, 2024","category":"development","tags":["recommendation-system","cro"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/de57c8b5f377679fd093279aaad5a040/12a3e/main-wide.png","srcSet":"/static/de57c8b5f377679fd093279aaad5a040/9d9e0/main-wide.png 225w,\n/static/de57c8b5f377679fd093279aaad5a040/cc174/main-wide.png 450w,\n/static/de57c8b5f377679fd093279aaad5a040/12a3e/main-wide.png 900w,\n/static/de57c8b5f377679fd093279aaad5a040/4dd11/main-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/de57c8b5f377679fd093279aaad5a040/3f003/main-wide.webp 225w,\n/static/de57c8b5f377679fd093279aaad5a040/ba134/main-wide.webp 450w,\n/static/de57c8b5f377679fd093279aaad5a040/e7f7d/main-wide.webp 900w,\n/static/de57c8b5f377679fd093279aaad5a040/fc420/main-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"main image"},"id":"2e51282b-7243-52fa-8325-9dc7058c78c9","slug":"development/ndc-cookie-recommendation/"},{"frontmatter":{"title":"[Redis] ZSet으로 랭킹 시스템 구현하기 (feat. 점수 갱신, 동점자 처리)","description":"레디스 ZSet을 활용하여 온라인 게임의 랭킹 시스템을 구현하는 방법에 대해 정리해보겠습니다. 세부적인 요구사항에 따라 점수 갱신 로직과 동점자들을 어떻게 관리할 수 있는지에 대해 알아봅니다.","date":"November 22, 2023","category":"development","tags":["redis","zset","sorted-set","hash","data-structure","leaderboard","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/50497664268d698ba6fe36f8be31fea2/12a3e/redis-ranking-system-with-zset-wide.png","srcSet":"/static/50497664268d698ba6fe36f8be31fea2/9d9e0/redis-ranking-system-with-zset-wide.png 225w,\n/static/50497664268d698ba6fe36f8be31fea2/cc174/redis-ranking-system-with-zset-wide.png 450w,\n/static/50497664268d698ba6fe36f8be31fea2/12a3e/redis-ranking-system-with-zset-wide.png 900w,\n/static/50497664268d698ba6fe36f8be31fea2/4dd11/redis-ranking-system-with-zset-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/50497664268d698ba6fe36f8be31fea2/3f003/redis-ranking-system-with-zset-wide.webp 225w,\n/static/50497664268d698ba6fe36f8be31fea2/ba134/redis-ranking-system-with-zset-wide.webp 450w,\n/static/50497664268d698ba6fe36f8be31fea2/e7f7d/redis-ranking-system-with-zset-wide.webp 900w,\n/static/50497664268d698ba6fe36f8be31fea2/fc420/redis-ranking-system-with-zset-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"redis ranking system with zset image"},"id":"30ac5d42-61cd-5b7b-8c62-c204d9219443","slug":"development/redis-ranking-system-with-zset/"},{"frontmatter":{"title":"[Redis] ZSet 자료구조 개요","description":"레디스에서 제공하는 Sorted Set 자료구조에 대해 정리해보겠습니다. ZSet을 활용하면 온라인 게임의 랭킹 시스템이나 투표 시스템 등을 쉽게 구현할 수 있습니다.","date":"November 21, 2023","category":"development","tags":["redis","zset","sorted-set","data-structure","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/9cfd558d626ab35db831f3761b03981e/12a3e/redis-zset-wide.png","srcSet":"/static/9cfd558d626ab35db831f3761b03981e/9d9e0/redis-zset-wide.png 225w,\n/static/9cfd558d626ab35db831f3761b03981e/cc174/redis-zset-wide.png 450w,\n/static/9cfd558d626ab35db831f3761b03981e/12a3e/redis-zset-wide.png 900w,\n/static/9cfd558d626ab35db831f3761b03981e/4dd11/redis-zset-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/9cfd558d626ab35db831f3761b03981e/3f003/redis-zset-wide.webp 225w,\n/static/9cfd558d626ab35db831f3761b03981e/ba134/redis-zset-wide.webp 450w,\n/static/9cfd558d626ab35db831f3761b03981e/e7f7d/redis-zset-wide.webp 900w,\n/static/9cfd558d626ab35db831f3761b03981e/fc420/redis-zset-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"redis zset image"},"id":"1bbb4e07-843a-51bd-8107-2041cbe90a74","slug":"development/redis-zset-basics/"},{"frontmatter":{"title":"[Redis] Hash 자료구조 개요","description":"레디스에서 객체를 관리하는 방법인 Hash 자료구조에 대해 간략하게 정리해보겠습니다. 레디스 공식문서와 레디스 공식 유튜브의 영상을 참고하였습니다.","date":"November 18, 2023","category":"development","tags":["redis","hash","data-structure","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f76ef8db9ddb9929d22f13f3698ea756/12a3e/redis-hash-wide.png","srcSet":"/static/f76ef8db9ddb9929d22f13f3698ea756/9d9e0/redis-hash-wide.png 225w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/cc174/redis-hash-wide.png 450w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/12a3e/redis-hash-wide.png 900w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/4dd11/redis-hash-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/f76ef8db9ddb9929d22f13f3698ea756/3f003/redis-hash-wide.webp 225w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/ba134/redis-hash-wide.webp 450w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/e7f7d/redis-hash-wide.webp 900w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/fc420/redis-hash-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"redis hash image"},"id":"d9255480-f691-5312-a1cd-3154e71220e9","slug":"development/redis-hash-basics/"},{"frontmatter":{"title":"[Redis] Set 자료구조 개요","description":"셋과 리스트의 차이를 설명하고 레디스에서 제공하는 Set 자료구조에 대해 정리해보겠습니다. 레디스의 set을 활용하면 게시글별 좋아요 기능이나 친구 요청 기능을 쉽게 구현할 수 있습니다.","date":"November 17, 2023","category":"development","tags":["redis","set-data-structure","data-structure","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/7a81a91a1d3b0b0d957c2637318f1e11/12a3e/redis-set-wide.png","srcSet":"/static/7a81a91a1d3b0b0d957c2637318f1e11/9d9e0/redis-set-wide.png 225w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/cc174/redis-set-wide.png 450w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/12a3e/redis-set-wide.png 900w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/4dd11/redis-set-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/7a81a91a1d3b0b0d957c2637318f1e11/3f003/redis-set-wide.webp 225w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/ba134/redis-set-wide.webp 450w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/e7f7d/redis-set-wide.webp 900w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/fc420/redis-set-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"redis set image"},"id":"c3c429cb-e401-58de-bd6e-8bf0f6ff32df","slug":"development/redis-set-basics/"}],"pageInfo":{"currentPage":2,"hasNextPage":true,"hasPreviousPage":true,"pageCount":5,"totalCount":48}}},"pageContext":{"slug":"development","ko":"개발","en":"Development","skip":10}},
    "staticQueryHashes": ["1903006949","2193720160"]}