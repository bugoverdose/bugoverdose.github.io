{
    "componentChunkName": "component---src-templates-category-js",
    "path": "/category/development",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"title":"[Go] 추상화와 다형성","description":"Go 인터페이스를 통해 추상화와 다형성의 정의를 가볍게 설명하겠습니다.","date":"September 19, 2023","category":"development","tags":["go","oop","abstraction","polymorphism"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/29095862f9be24798bc1fe2078bcf596/12a3e/abstraction-and-polymorphism-wide.png","srcSet":"/static/29095862f9be24798bc1fe2078bcf596/9d9e0/abstraction-and-polymorphism-wide.png 225w,\n/static/29095862f9be24798bc1fe2078bcf596/cc174/abstraction-and-polymorphism-wide.png 450w,\n/static/29095862f9be24798bc1fe2078bcf596/12a3e/abstraction-and-polymorphism-wide.png 900w,\n/static/29095862f9be24798bc1fe2078bcf596/4dd11/abstraction-and-polymorphism-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/29095862f9be24798bc1fe2078bcf596/3f003/abstraction-and-polymorphism-wide.webp 225w,\n/static/29095862f9be24798bc1fe2078bcf596/ba134/abstraction-and-polymorphism-wide.webp 450w,\n/static/29095862f9be24798bc1fe2078bcf596/e7f7d/abstraction-and-polymorphism-wide.webp 900w,\n/static/29095862f9be24798bc1fe2078bcf596/fc420/abstraction-and-polymorphism-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"abstraction and polymorphism image"},"id":"f55479d6-0c95-5cec-aaf7-66f46992b0f1","slug":"development/abstraction-and-polymorphism-in-go/"},{"frontmatter":{"title":"[Go] 객체 조합과 필드의 종류","description":"익명 필드, exported/unexported 필드 등 다른 타입의 객체를 조합하는 방식에 따라 발생하는 차이점에 대해 상속 대신 조합이라는 맥락에서 비교합니다.","date":"September 17, 2023","category":"development","tags":["go","oop","composition"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/b3bae6d959b7213ffd985cc4223edbcc/12a3e/composition-in-go-wide.png","srcSet":"/static/b3bae6d959b7213ffd985cc4223edbcc/9d9e0/composition-in-go-wide.png 225w,\n/static/b3bae6d959b7213ffd985cc4223edbcc/cc174/composition-in-go-wide.png 450w,\n/static/b3bae6d959b7213ffd985cc4223edbcc/12a3e/composition-in-go-wide.png 900w,\n/static/b3bae6d959b7213ffd985cc4223edbcc/4dd11/composition-in-go-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/b3bae6d959b7213ffd985cc4223edbcc/3f003/composition-in-go-wide.webp 225w,\n/static/b3bae6d959b7213ffd985cc4223edbcc/ba134/composition-in-go-wide.webp 450w,\n/static/b3bae6d959b7213ffd985cc4223edbcc/e7f7d/composition-in-go-wide.webp 900w,\n/static/b3bae6d959b7213ffd985cc4223edbcc/fc420/composition-in-go-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"composition in go image"},"id":"1d28bbcc-306c-5983-b452-f225321d6a49","slug":"development/composition-in-go/"},{"frontmatter":{"title":"[OOP] 상속 대신 조합","description":"예시 코드를 통해 코드 재사용 목적의 상속의 문제점을 파악하고, 서브클래싱, 서브타이핑, 리스코프 치환원칙 등의 키워드를 통해 상속 대신 조합이라는 표현에 대해 정리하겠습니다.","date":"September 16, 2023","category":"development","tags":["oop","lsp","inheritance","composition"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/dbd62544f8d85c24933ba484afc0eca0/12a3e/composition-over-inheritance-wide.png","srcSet":"/static/dbd62544f8d85c24933ba484afc0eca0/9d9e0/composition-over-inheritance-wide.png 225w,\n/static/dbd62544f8d85c24933ba484afc0eca0/cc174/composition-over-inheritance-wide.png 450w,\n/static/dbd62544f8d85c24933ba484afc0eca0/12a3e/composition-over-inheritance-wide.png 900w,\n/static/dbd62544f8d85c24933ba484afc0eca0/4dd11/composition-over-inheritance-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/dbd62544f8d85c24933ba484afc0eca0/3f003/composition-over-inheritance-wide.webp 225w,\n/static/dbd62544f8d85c24933ba484afc0eca0/ba134/composition-over-inheritance-wide.webp 450w,\n/static/dbd62544f8d85c24933ba484afc0eca0/e7f7d/composition-over-inheritance-wide.webp 900w,\n/static/dbd62544f8d85c24933ba484afc0eca0/fc420/composition-over-inheritance-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"composition over inheritance image"},"id":"331f0bbf-2787-53b1-a922-62e0526b3efa","slug":"development/composition-over-inheritance/"},{"frontmatter":{"title":"[Go] 구조체 캡슐화하기","description":"캡슐화의 정의를 설명하고 Go 언어에서 캡슐화를 구현할 수 있는 방법과 한계에 대해 다뤄보겠습니다. 예제 코드를 통해 Go 구조체의 내부 구현을 숨기는 방안을 단계적으로 정리하겠습니다.","date":"September 13, 2023","category":"development","tags":["go","oop","encapsulation"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/54ed42ec8080265f23681e5b2b1e6673/12a3e/encapsulating-go-structs-wide.png","srcSet":"/static/54ed42ec8080265f23681e5b2b1e6673/9d9e0/encapsulating-go-structs-wide.png 225w,\n/static/54ed42ec8080265f23681e5b2b1e6673/cc174/encapsulating-go-structs-wide.png 450w,\n/static/54ed42ec8080265f23681e5b2b1e6673/12a3e/encapsulating-go-structs-wide.png 900w,\n/static/54ed42ec8080265f23681e5b2b1e6673/4dd11/encapsulating-go-structs-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/54ed42ec8080265f23681e5b2b1e6673/3f003/encapsulating-go-structs-wide.webp 225w,\n/static/54ed42ec8080265f23681e5b2b1e6673/ba134/encapsulating-go-structs-wide.webp 450w,\n/static/54ed42ec8080265f23681e5b2b1e6673/e7f7d/encapsulating-go-structs-wide.webp 900w,\n/static/54ed42ec8080265f23681e5b2b1e6673/fc420/encapsulating-go-structs-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"encapsulating go structs image"},"id":"9b5fe3d8-b384-53f6-8752-e695e594acad","slug":"development/encapsulating-go-structs/"},{"frontmatter":{"title":"[Go] 벤치마크 테스트로 성능 측정하기","description":"Go 언어에서 성능 측정을 위해 제공하는 벤치마크 테스트에 대해 간략히 정리하겠습니다. Set 자료구조를 다양한 방식으로 구현하고 각 구현체의 성능을 비교해보고자 합니다.","date":"August 13, 2023","category":"development","tags":["go","test","benchmark"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/5b6908692dce06098a861d6956888d8e/12a3e/benchmark-wide.png","srcSet":"/static/5b6908692dce06098a861d6956888d8e/9d9e0/benchmark-wide.png 225w,\n/static/5b6908692dce06098a861d6956888d8e/cc174/benchmark-wide.png 450w,\n/static/5b6908692dce06098a861d6956888d8e/12a3e/benchmark-wide.png 900w,\n/static/5b6908692dce06098a861d6956888d8e/4dd11/benchmark-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/5b6908692dce06098a861d6956888d8e/3f003/benchmark-wide.webp 225w,\n/static/5b6908692dce06098a861d6956888d8e/ba134/benchmark-wide.webp 450w,\n/static/5b6908692dce06098a861d6956888d8e/e7f7d/benchmark-wide.webp 900w,\n/static/5b6908692dce06098a861d6956888d8e/fc420/benchmark-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"benchmark image"},"id":"e1c867e6-8fce-50ef-b29f-84b06d83238c","slug":"development/go-benchmark/"},{"frontmatter":{"title":"[Go] 테이블 드리븐 테스트 (Table Driven Tests)","description":"Go 언어에서 자주 사용하는 테스트 작성 방식인 테이블 드리븐(Table Driven)에 대해 간략히 정리하겠습니다. 어떤 상황에서 유용하고, 어떤 상황에서 한계를 지닐 수 있는지에 대해 예시와 함께 설명하고자 합니다.","date":"August 5, 2023","category":"development","tags":["go","test","table-driven"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/0169c59872ea582a3ab660a4cb0b7899/12a3e/table-driven-wide.png","srcSet":"/static/0169c59872ea582a3ab660a4cb0b7899/9d9e0/table-driven-wide.png 225w,\n/static/0169c59872ea582a3ab660a4cb0b7899/cc174/table-driven-wide.png 450w,\n/static/0169c59872ea582a3ab660a4cb0b7899/12a3e/table-driven-wide.png 900w,\n/static/0169c59872ea582a3ab660a4cb0b7899/4dd11/table-driven-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/0169c59872ea582a3ab660a4cb0b7899/3f003/table-driven-wide.webp 225w,\n/static/0169c59872ea582a3ab660a4cb0b7899/ba134/table-driven-wide.webp 450w,\n/static/0169c59872ea582a3ab660a4cb0b7899/e7f7d/table-driven-wide.webp 900w,\n/static/0169c59872ea582a3ab660a4cb0b7899/fc420/table-driven-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"table driven image"},"id":"9138295d-2941-5349-9bd0-647825863305","slug":"development/go-table-driven-tests/"},{"frontmatter":{"title":"테스트 코드로 레이어드 아키텍처 강제하기","description":"ArchUnit이라는 라이브러리를 통해 테스트 코드로 레이어드 아키텍처 스타일을 강제하는 수단에 대해 알아봅시다. 이를 통해 컴플라이언스와 아키텍처 피트니스 함수라는 개념에 대해 이해해봅시다.","date":"March 4, 2023","category":"development","tags":["archunit","fitness-function","layered-architecture"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f0a0cfda9ec4bf27a06d9e229c94f988/12a3e/archunit-wide.png","srcSet":"/static/f0a0cfda9ec4bf27a06d9e229c94f988/9d9e0/archunit-wide.png 225w,\n/static/f0a0cfda9ec4bf27a06d9e229c94f988/cc174/archunit-wide.png 450w,\n/static/f0a0cfda9ec4bf27a06d9e229c94f988/12a3e/archunit-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/f0a0cfda9ec4bf27a06d9e229c94f988/3f003/archunit-wide.webp 225w,\n/static/f0a0cfda9ec4bf27a06d9e229c94f988/ba134/archunit-wide.webp 450w,\n/static/f0a0cfda9ec4bf27a06d9e229c94f988/e7f7d/archunit-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"ArchUnit image"},"id":"d1be27d6-be78-5835-8f7f-a8170a938463","slug":"development/fitness-function-for-layered-architecture/"},{"frontmatter":{"title":"무중단 DB 마이그레이션과 호환성 문제 해결","description":"DB 마이그레이션 및 API 마이그레이션 작업을 무중단 배포로 수행하는 과정에서 발생할 수 있는 호환성 문제와 이에 대한 해결 방안에 대해 이야기합니다. 꼭꼭 서비스 개발 과정에서 직면한 문제를 예시로 설명합니다.","date":"September 28, 2022","category":"development","tags":["zero-downtime-deployment","flyway","db","migration"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/2e4f608b139bfc66637ff7f1636146f5/12a3e/version-1.5-wide.png","srcSet":"/static/2e4f608b139bfc66637ff7f1636146f5/9d9e0/version-1.5-wide.png 225w,\n/static/2e4f608b139bfc66637ff7f1636146f5/cc174/version-1.5-wide.png 450w,\n/static/2e4f608b139bfc66637ff7f1636146f5/12a3e/version-1.5-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/2e4f608b139bfc66637ff7f1636146f5/3f003/version-1.5-wide.webp 225w,\n/static/2e4f608b139bfc66637ff7f1636146f5/ba134/version-1.5-wide.webp 450w,\n/static/2e4f608b139bfc66637ff7f1636146f5/e7f7d/version-1.5-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"version 1.5 image"},"id":"fef39174-8d60-5f59-a604-6f7bc80e36d9","slug":"development/zero-downtime-deployment-and-compatibility/"},{"frontmatter":{"title":"[토이 프로젝트] MyS3: 나만의 작은 이미지 호스팅 서버","description":"AWS S3를 사용할 수 없게 되어 EC2 인스턴스에서 실행가능한 대체품을 만들어보았습니다. 이미지 파일 업로드 및 조회 API를 제공하며, 업로드된 파일을 로컬 머신에서 직접 관리하는 구조입니다.","date":"August 7, 2022","category":"development","tags":["java","project"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/85856f0bf522c0cc6abb8ae80b40652e/12a3e/mys3-wide.png","srcSet":"/static/85856f0bf522c0cc6abb8ae80b40652e/9d9e0/mys3-wide.png 225w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/cc174/mys3-wide.png 450w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/12a3e/mys3-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/85856f0bf522c0cc6abb8ae80b40652e/3f003/mys3-wide.webp 225w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/ba134/mys3-wide.webp 450w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/e7f7d/mys3-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"MyS3 image"},"id":"9c951dfe-90b0-5020-9d36-6ea16a2f52ec","slug":"development/image-hosting-server-toy-project/"},{"frontmatter":{"title":"[Spring] Profile: yml 파일 하나로 프로퍼티 관리하기","description":"application.yml 파일을 .gitignore에 넣는다거나, EC2 인스턴스에 yml 파일을 올려놓는 등의 행동을 하는 크루들이 많아 보여 제 방식을 정리해보았습니다. 튜토리얼과 실전 예제를 포함시켰습니다.","date":"July 29, 2022","category":"development","tags":["spring","property","jvm","linux"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/df2da7a1a0c15ebdbc88e98be8f29d11/12a3e/application.yml-wide.png","srcSet":"/static/df2da7a1a0c15ebdbc88e98be8f29d11/9d9e0/application.yml-wide.png 225w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/cc174/application.yml-wide.png 450w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/12a3e/application.yml-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/df2da7a1a0c15ebdbc88e98be8f29d11/3f003/application.yml-wide.webp 225w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/ba134/application.yml-wide.webp 450w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/e7f7d/application.yml-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"application.yml wide image"},"id":"244ff11b-e662-51ec-99e5-003c28cc582c","slug":"development/spring-profile-and-environment-variables-tutorial/"}],"pageInfo":{"currentPage":1,"hasNextPage":true,"hasPreviousPage":false,"pageCount":3,"totalCount":23}}},"pageContext":{"slug":"development","ko":"개발","en":"Development","skip":0}},
    "staticQueryHashes": ["1903006949","2193720160"]}