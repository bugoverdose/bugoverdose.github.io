{
    "componentChunkName": "component---src-templates-category-js",
    "path": "/category/development",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"title":"테스트 코드로 레이어드 아키텍처 강제하기","description":"ArchUnit이라는 라이브러리를 통해 테스트 코드로 레이어드 아키텍처 스타일을 강제하는 수단에 대해 알아봅시다. 이를 통해 컴플라이언스와 아키텍처 피트니스 함수라는 개념에 대해 이해해봅시다.","date":"March 4, 2023","category":"development","tags":["archunit","fitness-function","layered-architecture"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f0a0cfda9ec4bf27a06d9e229c94f988/12a3e/archunit-wide.png","srcSet":"/static/f0a0cfda9ec4bf27a06d9e229c94f988/9d9e0/archunit-wide.png 225w,\n/static/f0a0cfda9ec4bf27a06d9e229c94f988/cc174/archunit-wide.png 450w,\n/static/f0a0cfda9ec4bf27a06d9e229c94f988/12a3e/archunit-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/f0a0cfda9ec4bf27a06d9e229c94f988/3f003/archunit-wide.webp 225w,\n/static/f0a0cfda9ec4bf27a06d9e229c94f988/ba134/archunit-wide.webp 450w,\n/static/f0a0cfda9ec4bf27a06d9e229c94f988/e7f7d/archunit-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"ArchUnit image"},"id":"d1be27d6-be78-5835-8f7f-a8170a938463","slug":"development/fitness-function-for-layered-architecture/"},{"frontmatter":{"title":"무중단 DB 마이그레이션과 호환성 문제 해결","description":"DB 마이그레이션 및 API 마이그레이션 작업을 무중단 배포로 수행하는 과정에서 발생할 수 있는 호환성 문제와 이에 대한 해결 방안에 대해 이야기합니다. 꼭꼭 서비스 개발 과정에서 직면한 문제를 예시로 설명합니다.","date":"September 28, 2022","category":"development","tags":["zero-downtime-deployment","flyway","db","migration"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/2e4f608b139bfc66637ff7f1636146f5/12a3e/version-1.5-wide.png","srcSet":"/static/2e4f608b139bfc66637ff7f1636146f5/9d9e0/version-1.5-wide.png 225w,\n/static/2e4f608b139bfc66637ff7f1636146f5/cc174/version-1.5-wide.png 450w,\n/static/2e4f608b139bfc66637ff7f1636146f5/12a3e/version-1.5-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/2e4f608b139bfc66637ff7f1636146f5/3f003/version-1.5-wide.webp 225w,\n/static/2e4f608b139bfc66637ff7f1636146f5/ba134/version-1.5-wide.webp 450w,\n/static/2e4f608b139bfc66637ff7f1636146f5/e7f7d/version-1.5-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"version 1.5 image"},"id":"fef39174-8d60-5f59-a604-6f7bc80e36d9","slug":"development/zero-downtime-deployment-and-compatibility/"},{"frontmatter":{"title":"[토이 프로젝트] MyS3: 나만의 작은 이미지 호스팅 서버","description":"AWS S3를 사용할 수 없게 되어 EC2 인스턴스에서 실행가능한 대체품을 만들어보았습니다. 이미지 파일 업로드 및 조회 API를 제공하며, 업로드된 파일을 로컬 머신에서 직접 관리하는 구조입니다.","date":"August 7, 2022","category":"development","tags":["java","project"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/85856f0bf522c0cc6abb8ae80b40652e/12a3e/mys3-wide.png","srcSet":"/static/85856f0bf522c0cc6abb8ae80b40652e/9d9e0/mys3-wide.png 225w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/cc174/mys3-wide.png 450w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/12a3e/mys3-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/85856f0bf522c0cc6abb8ae80b40652e/3f003/mys3-wide.webp 225w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/ba134/mys3-wide.webp 450w,\n/static/85856f0bf522c0cc6abb8ae80b40652e/e7f7d/mys3-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"MyS3 image"},"id":"9c951dfe-90b0-5020-9d36-6ea16a2f52ec","slug":"development/image-hosting-server-toy-project/"},{"frontmatter":{"title":"[Go] 테이블 드리븐 테스트","description":"Go 언어에서 자주 사용하는 테스트 작성 방식인 테이블 드리븐(Table Driven)에 대해 간략히 정리하겠습니다. 어떤 상황에서 유용하고, 어떤 상황에서 한계를 지닐 수 있는지에 대해 예시와 함께 설명하고자 합니다.","date":"August 5, 2022","category":"development","tags":["go","test","table-driven"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/5db8613a0d2041eb090af66190a035f1/12a3e/table-driven-wide.png","srcSet":"/static/5db8613a0d2041eb090af66190a035f1/9d9e0/table-driven-wide.png 225w,\n/static/5db8613a0d2041eb090af66190a035f1/cc174/table-driven-wide.png 450w,\n/static/5db8613a0d2041eb090af66190a035f1/12a3e/table-driven-wide.png 900w,\n/static/5db8613a0d2041eb090af66190a035f1/4dd11/table-driven-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/5db8613a0d2041eb090af66190a035f1/3f003/table-driven-wide.webp 225w,\n/static/5db8613a0d2041eb090af66190a035f1/ba134/table-driven-wide.webp 450w,\n/static/5db8613a0d2041eb090af66190a035f1/e7f7d/table-driven-wide.webp 900w,\n/static/5db8613a0d2041eb090af66190a035f1/fc420/table-driven-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"table driven image"},"id":"9138295d-2941-5349-9bd0-647825863305","slug":"development/go-table-driven-tests/"},{"frontmatter":{"title":"[Spring] Profile: yml 파일 하나로 프로퍼티 관리하기","description":"application.yml 파일을 .gitignore에 넣는다거나, EC2 인스턴스에 yml 파일을 올려놓는 등의 행동을 하는 크루들이 많아 보여 제 방식을 정리해보았습니다. 튜토리얼과 실전 예제를 포함시켰습니다.","date":"July 29, 2022","category":"development","tags":["spring","property","jvm","linux"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/df2da7a1a0c15ebdbc88e98be8f29d11/12a3e/application.yml-wide.png","srcSet":"/static/df2da7a1a0c15ebdbc88e98be8f29d11/9d9e0/application.yml-wide.png 225w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/cc174/application.yml-wide.png 450w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/12a3e/application.yml-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/df2da7a1a0c15ebdbc88e98be8f29d11/3f003/application.yml-wide.webp 225w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/ba134/application.yml-wide.webp 450w,\n/static/df2da7a1a0c15ebdbc88e98be8f29d11/e7f7d/application.yml-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"application.yml wide image"},"id":"244ff11b-e662-51ec-99e5-003c28cc582c","slug":"development/spring-profile-and-environment-variables-tutorial/"},{"frontmatter":{"title":"Swagger: JWT 인증 버튼 셋업","description":"Swagger UI 페이지에서 Authorize 버튼을 등록해보자. 특히 Authorization 헤더에 토큰을 설정할 때 'Bearer'라는 문자열이 자동으로 추가되도록 설정하는 방법을 알아보자.","date":"June 5, 2022","category":"development","tags":["swagger","authentication","dev-tools","api","spring"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ca7d3536aab0795872bb01c57b44111f/12a3e/swagger-wide.png","srcSet":"/static/ca7d3536aab0795872bb01c57b44111f/9d9e0/swagger-wide.png 225w,\n/static/ca7d3536aab0795872bb01c57b44111f/cc174/swagger-wide.png 450w,\n/static/ca7d3536aab0795872bb01c57b44111f/12a3e/swagger-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/ca7d3536aab0795872bb01c57b44111f/3f003/swagger-wide.webp 225w,\n/static/ca7d3536aab0795872bb01c57b44111f/ba134/swagger-wide.webp 450w,\n/static/ca7d3536aab0795872bb01c57b44111f/e7f7d/swagger-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"swagger image"},"id":"0ab6e5ae-80b4-50a5-8dcc-82f9e50fab01","slug":"development/swagger-auth-tutorial/"},{"frontmatter":{"title":"Swagger를 통한 API 문서 자동화","description":"API 문서화 및 관리 툴인 Swagger에 입문해보자. Postman처럼 서버에 실제로 요청을 보낼 수 있을 뿐만 아니라, API 명세를 자동으로 생성할 수 있다는 점은 Swagger가 지닌 확실한 장점이다.","date":"May 28, 2022","category":"development","tags":["swagger","dev-tools","api","spring"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ca7d3536aab0795872bb01c57b44111f/12a3e/swagger-wide.png","srcSet":"/static/ca7d3536aab0795872bb01c57b44111f/9d9e0/swagger-wide.png 225w,\n/static/ca7d3536aab0795872bb01c57b44111f/cc174/swagger-wide.png 450w,\n/static/ca7d3536aab0795872bb01c57b44111f/12a3e/swagger-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/ca7d3536aab0795872bb01c57b44111f/3f003/swagger-wide.webp 225w,\n/static/ca7d3536aab0795872bb01c57b44111f/ba134/swagger-wide.webp 450w,\n/static/ca7d3536aab0795872bb01c57b44111f/e7f7d/swagger-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"swagger image"},"id":"dcd3beaf-7346-5818-9ee0-dd4da36ef76f","slug":"development/swagger-tutorial/"},{"frontmatter":{"title":"[Java] 데코레이터 패턴: 구현과 한계","description":"데코레이터 패턴을 통해 특정한 데이터에 대해 일련의 작업을 순차적으로 적용하는 구조를 만들어보자. 그리고 이러한 코드의 한계에 대하여 논해보자. 유연한 코드의 이면에는 구조의 복잡성이 자리잡고 있다.","date":"May 26, 2022","category":"development","tags":["java","decorator-pattern","design-pattern"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/92b247c93aece14a68001c0de2d469e0/12a3e/decorator-pattern-wide.png","srcSet":"/static/92b247c93aece14a68001c0de2d469e0/9d9e0/decorator-pattern-wide.png 225w,\n/static/92b247c93aece14a68001c0de2d469e0/cc174/decorator-pattern-wide.png 450w,\n/static/92b247c93aece14a68001c0de2d469e0/12a3e/decorator-pattern-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/92b247c93aece14a68001c0de2d469e0/3f003/decorator-pattern-wide.webp 225w,\n/static/92b247c93aece14a68001c0de2d469e0/ba134/decorator-pattern-wide.webp 450w,\n/static/92b247c93aece14a68001c0de2d469e0/e7f7d/decorator-pattern-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"decorator pattern image"},"id":"c9b13bab-4f76-5fe3-852b-52ce33f4edb4","slug":"development/decorator-pattern-implementation-and-limitations/"},{"frontmatter":{"title":"[Java] 어댑터 패턴과 OCP","description":"어댑터 패턴을 통해 외부 라이브러리에 대한 의존성을 도메인으로부터 분리하는 과정을 다룬다. 추상화에 대한 의존과 객체의 사용과 생성의 분리라는 관점에서 OCP에 부합하도록 클라이언트 코드를 리팩토링해보자.","date":"May 25, 2022","category":"development","tags":["java","adapter","design-pattern","ocp"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/386828e1664f43a583c6ae4b70a678fc/12a3e/adapter-pattern-wide.png","srcSet":"/static/386828e1664f43a583c6ae4b70a678fc/9d9e0/adapter-pattern-wide.png 225w,\n/static/386828e1664f43a583c6ae4b70a678fc/cc174/adapter-pattern-wide.png 450w,\n/static/386828e1664f43a583c6ae4b70a678fc/12a3e/adapter-pattern-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/386828e1664f43a583c6ae4b70a678fc/3f003/adapter-pattern-wide.webp 225w,\n/static/386828e1664f43a583c6ae4b70a678fc/ba134/adapter-pattern-wide.webp 450w,\n/static/386828e1664f43a583c6ae4b70a678fc/e7f7d/adapter-pattern-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"adapter pattern image"},"id":"9f8b3080-ccce-59ad-af78-88f90d17b374","slug":"development/adapter-pattern-and-ocp/"},{"frontmatter":{"title":"[Java] JGraphT 라이브러리를 통한 최단경로 조회","description":"해당 게시글은 jgrapht 라이브러리를 활용하는 다양한 방법에 대한 예시 코드를 제공한다. 특히 기존 도메인을 수정하지 않고 최단경로를 구간들의 목록으로 반환받는 방법에 대한 탐구 과정을 단계별로 정리하였다.","date":"May 24, 2022","category":"development","tags":["java","jgrapht","algorithm","proxy"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/5e50e0a8f4a1c7580f11aa380feb0308/12a3e/jgrapht-wide.png","srcSet":"/static/5e50e0a8f4a1c7580f11aa380feb0308/9d9e0/jgrapht-wide.png 225w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/cc174/jgrapht-wide.png 450w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/12a3e/jgrapht-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/5e50e0a8f4a1c7580f11aa380feb0308/3f003/jgrapht-wide.webp 225w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/ba134/jgrapht-wide.webp 450w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/e7f7d/jgrapht-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"jgrapht image"},"id":"f390eb87-c39d-5091-89d3-606513f0def8","slug":"development/finding-shortest-path-with-jgrapht/"}],"pageInfo":{"currentPage":1,"hasNextPage":true,"hasPreviousPage":false,"pageCount":2,"totalCount":19}}},"pageContext":{"slug":"development","ko":"개발","en":"Development","skip":0}},
    "staticQueryHashes": ["1903006949","2193720160"]}