{
    "componentChunkName": "component---src-templates-tag-js",
    "path": "/tag/algorithm",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"title":"[알고리즘] 재귀와 반복","description":"팩토리얼, 거듭제곱, 피보나치 수열 예시를 통해 재귀호출에 대해 가볍게 정리합니다. 이를 통해 어떤 상황에서 재귀호출이 효율적이고, 어떤 상황에서 단순한 반복문이 더 효율적일 수 있는지 알아봅니다.","date":"November 11, 2023","category":"computer-science","tags":["algorithm","recursion","factorial","fibonacci"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/80b38bb5e6d529f2a3d5e418bac0f019/12a3e/recursion-wide.png","srcSet":"/static/80b38bb5e6d529f2a3d5e418bac0f019/9d9e0/recursion-wide.png 225w,\n/static/80b38bb5e6d529f2a3d5e418bac0f019/cc174/recursion-wide.png 450w,\n/static/80b38bb5e6d529f2a3d5e418bac0f019/12a3e/recursion-wide.png 900w,\n/static/80b38bb5e6d529f2a3d5e418bac0f019/4dd11/recursion-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/80b38bb5e6d529f2a3d5e418bac0f019/3f003/recursion-wide.webp 225w,\n/static/80b38bb5e6d529f2a3d5e418bac0f019/ba134/recursion-wide.webp 450w,\n/static/80b38bb5e6d529f2a3d5e418bac0f019/e7f7d/recursion-wide.webp 900w,\n/static/80b38bb5e6d529f2a3d5e418bac0f019/fc420/recursion-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"recursion image"},"id":"7ef4364e-c477-5fec-9c2c-ad1612f4103c","slug":"computer-science/recursion-and-iteration/"},{"frontmatter":{"title":"[Java] JGraphT 라이브러리를 통한 최단경로 조회","description":"해당 게시글은 jgrapht 라이브러리를 활용하는 다양한 방법에 대한 예시 코드를 제공한다. 특히 기존 도메인을 수정하지 않고 최단경로를 구간들의 목록으로 반환받는 방법에 대한 탐구 과정을 단계별로 정리하였다.","date":"May 24, 2022","category":"development","tags":["java","jgrapht","algorithm","proxy"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/5e50e0a8f4a1c7580f11aa380feb0308/12a3e/jgrapht-wide.png","srcSet":"/static/5e50e0a8f4a1c7580f11aa380feb0308/9d9e0/jgrapht-wide.png 225w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/cc174/jgrapht-wide.png 450w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/12a3e/jgrapht-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/5e50e0a8f4a1c7580f11aa380feb0308/3f003/jgrapht-wide.webp 225w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/ba134/jgrapht-wide.webp 450w,\n/static/5e50e0a8f4a1c7580f11aa380feb0308/e7f7d/jgrapht-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"jgrapht image"},"id":"f390eb87-c39d-5091-89d3-606513f0def8","slug":"development/finding-shortest-path-with-jgrapht/"}],"pageInfo":{"currentPage":1,"hasNextPage":false,"hasPreviousPage":false,"pageCount":1,"totalCount":2}}},"pageContext":{"slug":"algorithm","ko":"알고리즘","skip":0}},
    "staticQueryHashes": ["1903006949","2193720160"]}