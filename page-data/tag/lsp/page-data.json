{
    "componentChunkName": "component---src-templates-tag-js",
    "path": "/tag/lsp",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"title":"[OOP] 상속 대신 조합","description":"예시 코드를 통해 코드 재사용 목적의 상속의 문제점을 파악하고, 서브클래싱, 서브타이핑, 리스코프 치환원칙 등의 키워드를 통해 상속 대신 조합이라는 표현에 대해 정리하겠습니다.","date":"September 16, 2023","category":"development","tags":["oop","lsp","inheritance","composition"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/dbd62544f8d85c24933ba484afc0eca0/12a3e/composition-over-inheritance-wide.png","srcSet":"/static/dbd62544f8d85c24933ba484afc0eca0/9d9e0/composition-over-inheritance-wide.png 225w,\n/static/dbd62544f8d85c24933ba484afc0eca0/cc174/composition-over-inheritance-wide.png 450w,\n/static/dbd62544f8d85c24933ba484afc0eca0/12a3e/composition-over-inheritance-wide.png 900w,\n/static/dbd62544f8d85c24933ba484afc0eca0/4dd11/composition-over-inheritance-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/dbd62544f8d85c24933ba484afc0eca0/3f003/composition-over-inheritance-wide.webp 225w,\n/static/dbd62544f8d85c24933ba484afc0eca0/ba134/composition-over-inheritance-wide.webp 450w,\n/static/dbd62544f8d85c24933ba484afc0eca0/e7f7d/composition-over-inheritance-wide.webp 900w,\n/static/dbd62544f8d85c24933ba484afc0eca0/fc420/composition-over-inheritance-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"composition over inheritance image"},"id":"331f0bbf-2787-53b1-a922-62e0526b3efa","slug":"development/composition-over-inheritance/"},{"frontmatter":{"title":"[OOP] SOLID 압축 정리본","description":"우아한테크코스 레벨 인터뷰 준비 과정에서 작성한 SOLID에 대한 개념 정리이다. 너무 깊지도, 얕지도 않도록 최소한의 예제만을 활용한 압축본을 만드는 것을 목표로 하였다. 오브젝트 스터디 종료 후 수정할 계획이다.","date":"April 26, 2022","category":"computer-science","tags":["oop","srp","ocp","lsp","isp","dip"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/782dfc0465da57291e95692f6860f8f8/12a3e/solid-wide.png","srcSet":"/static/782dfc0465da57291e95692f6860f8f8/9d9e0/solid-wide.png 225w,\n/static/782dfc0465da57291e95692f6860f8f8/cc174/solid-wide.png 450w,\n/static/782dfc0465da57291e95692f6860f8f8/12a3e/solid-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/782dfc0465da57291e95692f6860f8f8/3f003/solid-wide.webp 225w,\n/static/782dfc0465da57291e95692f6860f8f8/ba134/solid-wide.webp 450w,\n/static/782dfc0465da57291e95692f6860f8f8/e7f7d/solid-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"solid image"},"id":"31c53484-fab6-5a85-866c-46c21dd3e22c","slug":"computer-science/solid-basics/"}],"pageInfo":{"currentPage":1,"hasNextPage":false,"hasPreviousPage":false,"pageCount":1,"totalCount":2}}},"pageContext":{"slug":"lsp","ko":"리스코프 치환 원칙","skip":0}},
    "staticQueryHashes": ["1903006949","2193720160"]}