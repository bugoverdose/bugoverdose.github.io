{
    "componentChunkName": "component---src-templates-tag-js",
    "path": "/tag/database",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"title":"[Redis] ZSet, Hash, List는 왜 내부적으로 Zip List를 사용할까?","description":"레디스는 높은 성능을 위해 모든 데이터를 메모리에서 관리합니다. 동시에 성능 저하를 최소화하는 선에서 메모리를 최대한 효율적으로 활용하기 위해 노력하는데, 대표적인 예가 zip 리스트입니다.","date":"July 20, 2024","category":"docs","tags":["redis","zip-list","zset","sorted-set","hash","list","data-structure","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/6c8124a74635664507ee40ca2bd4ea3c/12a3e/thumbnail.png","srcSet":"/static/6c8124a74635664507ee40ca2bd4ea3c/9d9e0/thumbnail.png 225w,\n/static/6c8124a74635664507ee40ca2bd4ea3c/cc174/thumbnail.png 450w,\n/static/6c8124a74635664507ee40ca2bd4ea3c/12a3e/thumbnail.png 900w,\n/static/6c8124a74635664507ee40ca2bd4ea3c/4dd11/thumbnail.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/6c8124a74635664507ee40ca2bd4ea3c/3f003/thumbnail.webp 225w,\n/static/6c8124a74635664507ee40ca2bd4ea3c/ba134/thumbnail.webp 450w,\n/static/6c8124a74635664507ee40ca2bd4ea3c/e7f7d/thumbnail.webp 900w,\n/static/6c8124a74635664507ee40ca2bd4ea3c/fc420/thumbnail.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"thumbnail image"},"id":"de0e774d-4d5e-5bd8-8699-55440e4773c2","slug":"posts/85/"},{"frontmatter":{"title":"[MySQL] B트리 인덱스와 Hash 인덱스","description":"인덱스는 데이터를 보다 효율적으로 검색할 수 있도록 테이블에서 관리되는 자료구조입니다. 해당 글에서는 MySQL에서 제공되는 B 트리 기반 인덱스와 Hash 인덱스의 특징과 주의사항에 대해 가볍게 정리해보고자 합니다.","date":"January 3, 2024","category":"computer-science","tags":["mysql","database","index","b-tree","hash"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/e8236d054d06f5b0e2f42c5cf5b28551/12a3e/main-wide.png","srcSet":"/static/e8236d054d06f5b0e2f42c5cf5b28551/9d9e0/main-wide.png 225w,\n/static/e8236d054d06f5b0e2f42c5cf5b28551/cc174/main-wide.png 450w,\n/static/e8236d054d06f5b0e2f42c5cf5b28551/12a3e/main-wide.png 900w,\n/static/e8236d054d06f5b0e2f42c5cf5b28551/4dd11/main-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/e8236d054d06f5b0e2f42c5cf5b28551/3f003/main-wide.webp 225w,\n/static/e8236d054d06f5b0e2f42c5cf5b28551/ba134/main-wide.webp 450w,\n/static/e8236d054d06f5b0e2f42c5cf5b28551/e7f7d/main-wide.webp 900w,\n/static/e8236d054d06f5b0e2f42c5cf5b28551/fc420/main-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"main image"},"id":"04921a36-824f-5f86-9638-06a66567228b","slug":"computer-science/btree-index-and-hash-index/"},{"frontmatter":{"title":"[MySQL] 왜 DB 인덱스로 B 트리를 사용하는가 (feat. 이진탐색트리)","description":"MySQL에서는 일반적으로 B 트리 기반의 인덱스가 사용됩니다. 이진탐색트리과의 비교를 통해 B 트리 자료구조를 이해하고, 왜 DB 인덱스에 적절한지에 대해 정리해보고자 합니다.","date":"January 2, 2024","category":"computer-science","tags":["mysql","data-structure","b-tree","binary-search-tree","database","index"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/50c27211decbf4235b871f56ae3d1a0b/12a3e/main-wide.png","srcSet":"/static/50c27211decbf4235b871f56ae3d1a0b/9d9e0/main-wide.png 225w,\n/static/50c27211decbf4235b871f56ae3d1a0b/cc174/main-wide.png 450w,\n/static/50c27211decbf4235b871f56ae3d1a0b/12a3e/main-wide.png 900w,\n/static/50c27211decbf4235b871f56ae3d1a0b/4dd11/main-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/50c27211decbf4235b871f56ae3d1a0b/3f003/main-wide.webp 225w,\n/static/50c27211decbf4235b871f56ae3d1a0b/ba134/main-wide.webp 450w,\n/static/50c27211decbf4235b871f56ae3d1a0b/e7f7d/main-wide.webp 900w,\n/static/50c27211decbf4235b871f56ae3d1a0b/fc420/main-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"main image"},"id":"6a0636a2-da60-5dfe-95dc-61213ab3ff3b","slug":"computer-science/why-use-btree-for-db-index/"},{"frontmatter":{"title":"[Redis] ZSet으로 랭킹 시스템 구현하기 (feat. 점수 갱신, 동점자 처리)","description":"레디스 ZSet을 활용하여 온라인 게임의 랭킹 시스템을 구현하는 방법에 대해 정리해보겠습니다. 세부적인 요구사항에 따라 점수 갱신 로직과 동점자들을 어떻게 관리할 수 있는지에 대해 알아봅니다.","date":"November 22, 2023","category":"development","tags":["redis","zset","sorted-set","hash","data-structure","leaderboard","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/50497664268d698ba6fe36f8be31fea2/12a3e/redis-ranking-system-with-zset-wide.png","srcSet":"/static/50497664268d698ba6fe36f8be31fea2/9d9e0/redis-ranking-system-with-zset-wide.png 225w,\n/static/50497664268d698ba6fe36f8be31fea2/cc174/redis-ranking-system-with-zset-wide.png 450w,\n/static/50497664268d698ba6fe36f8be31fea2/12a3e/redis-ranking-system-with-zset-wide.png 900w,\n/static/50497664268d698ba6fe36f8be31fea2/4dd11/redis-ranking-system-with-zset-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/50497664268d698ba6fe36f8be31fea2/3f003/redis-ranking-system-with-zset-wide.webp 225w,\n/static/50497664268d698ba6fe36f8be31fea2/ba134/redis-ranking-system-with-zset-wide.webp 450w,\n/static/50497664268d698ba6fe36f8be31fea2/e7f7d/redis-ranking-system-with-zset-wide.webp 900w,\n/static/50497664268d698ba6fe36f8be31fea2/fc420/redis-ranking-system-with-zset-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"redis ranking system with zset image"},"id":"30ac5d42-61cd-5b7b-8c62-c204d9219443","slug":"development/redis-ranking-system-with-zset/"},{"frontmatter":{"title":"[Redis] ZSet 자료구조 개요","description":"레디스에서 제공하는 Sorted Set 자료구조에 대해 정리해보겠습니다. ZSet을 활용하면 온라인 게임의 랭킹 시스템이나 투표 시스템 등을 쉽게 구현할 수 있습니다.","date":"November 21, 2023","category":"development","tags":["redis","zset","sorted-set","data-structure","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/9cfd558d626ab35db831f3761b03981e/12a3e/redis-zset-wide.png","srcSet":"/static/9cfd558d626ab35db831f3761b03981e/9d9e0/redis-zset-wide.png 225w,\n/static/9cfd558d626ab35db831f3761b03981e/cc174/redis-zset-wide.png 450w,\n/static/9cfd558d626ab35db831f3761b03981e/12a3e/redis-zset-wide.png 900w,\n/static/9cfd558d626ab35db831f3761b03981e/4dd11/redis-zset-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/9cfd558d626ab35db831f3761b03981e/3f003/redis-zset-wide.webp 225w,\n/static/9cfd558d626ab35db831f3761b03981e/ba134/redis-zset-wide.webp 450w,\n/static/9cfd558d626ab35db831f3761b03981e/e7f7d/redis-zset-wide.webp 900w,\n/static/9cfd558d626ab35db831f3761b03981e/fc420/redis-zset-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"redis zset image"},"id":"1bbb4e07-843a-51bd-8107-2041cbe90a74","slug":"development/redis-zset-basics/"},{"frontmatter":{"title":"[Redis] Hash 자료구조 개요","description":"레디스에서 객체를 관리하는 방법인 Hash 자료구조에 대해 간략하게 정리해보겠습니다. 레디스 공식문서와 레디스 공식 유튜브의 영상을 참고하였습니다.","date":"November 18, 2023","category":"development","tags":["redis","hash","data-structure","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f76ef8db9ddb9929d22f13f3698ea756/12a3e/redis-hash-wide.png","srcSet":"/static/f76ef8db9ddb9929d22f13f3698ea756/9d9e0/redis-hash-wide.png 225w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/cc174/redis-hash-wide.png 450w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/12a3e/redis-hash-wide.png 900w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/4dd11/redis-hash-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/f76ef8db9ddb9929d22f13f3698ea756/3f003/redis-hash-wide.webp 225w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/ba134/redis-hash-wide.webp 450w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/e7f7d/redis-hash-wide.webp 900w,\n/static/f76ef8db9ddb9929d22f13f3698ea756/fc420/redis-hash-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"redis hash image"},"id":"d9255480-f691-5312-a1cd-3154e71220e9","slug":"development/redis-hash-basics/"},{"frontmatter":{"title":"[Redis] Set 자료구조 개요","description":"셋과 리스트의 차이를 설명하고 레디스에서 제공하는 Set 자료구조에 대해 정리해보겠습니다. 레디스의 set을 활용하면 게시글별 좋아요 기능이나 친구 요청 기능을 쉽게 구현할 수 있습니다.","date":"November 17, 2023","category":"development","tags":["redis","set-data-structure","data-structure","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/7a81a91a1d3b0b0d957c2637318f1e11/12a3e/redis-set-wide.png","srcSet":"/static/7a81a91a1d3b0b0d957c2637318f1e11/9d9e0/redis-set-wide.png 225w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/cc174/redis-set-wide.png 450w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/12a3e/redis-set-wide.png 900w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/4dd11/redis-set-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/7a81a91a1d3b0b0d957c2637318f1e11/3f003/redis-set-wide.webp 225w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/ba134/redis-set-wide.webp 450w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/e7f7d/redis-set-wide.webp 900w,\n/static/7a81a91a1d3b0b0d957c2637318f1e11/fc420/redis-set-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"redis set image"},"id":"c3c429cb-e401-58de-bd6e-8bf0f6ff32df","slug":"development/redis-set-basics/"},{"frontmatter":{"title":"[Couchbase] CAS 기반 낙관적 락킹","description":"낙관적 락킹과 비관적 락킹에 대해 정리하고, 카우치베이스에서 제공하는 CAS 기반 낙관적 락킹에 대해 실습 코드와 함께 정리해봅니다.","date":"October 10, 2023","category":"computer-science","tags":["couchbase","cas","concurrency-control","optimistic-lock","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/7d22098201c7fadb5d72fb1391a883dd/12a3e/optimistic-locking-with-cas-wide.png","srcSet":"/static/7d22098201c7fadb5d72fb1391a883dd/9d9e0/optimistic-locking-with-cas-wide.png 225w,\n/static/7d22098201c7fadb5d72fb1391a883dd/cc174/optimistic-locking-with-cas-wide.png 450w,\n/static/7d22098201c7fadb5d72fb1391a883dd/12a3e/optimistic-locking-with-cas-wide.png 900w,\n/static/7d22098201c7fadb5d72fb1391a883dd/4dd11/optimistic-locking-with-cas-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/7d22098201c7fadb5d72fb1391a883dd/3f003/optimistic-locking-with-cas-wide.webp 225w,\n/static/7d22098201c7fadb5d72fb1391a883dd/ba134/optimistic-locking-with-cas-wide.webp 450w,\n/static/7d22098201c7fadb5d72fb1391a883dd/e7f7d/optimistic-locking-with-cas-wide.webp 900w,\n/static/7d22098201c7fadb5d72fb1391a883dd/fc420/optimistic-locking-with-cas-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"optimistic locking with cas image"},"id":"a135440e-2f93-5edb-8f52-89f95537ee6c","slug":"computer-science/optimistic-locking-with-cas/"},{"frontmatter":{"title":"[Couchbase] 도커 컨테이너 기반 환경 셋업","description":"실습 및 테스트 환경 셋업을 위해 카우치베이스 서버 구동, 클러스터 및 버켓 생성 작업을 자동화시켜주는 Dockerfile 및 배쉬 스크립트를 정리하였습니다. 배쉬 스크립트에서는 쉘옵션 설정 및 작업 제어(job control) 등의 기능을 활용하였습니다.","date":"October 9, 2023","category":"development","tags":["couchbase","setup","docker","bash","set","job-control","database"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/cbdf6ceb6a55582045b41036741f6eec/12a3e/couchbase-setup-with-docker-wide.png","srcSet":"/static/cbdf6ceb6a55582045b41036741f6eec/9d9e0/couchbase-setup-with-docker-wide.png 225w,\n/static/cbdf6ceb6a55582045b41036741f6eec/cc174/couchbase-setup-with-docker-wide.png 450w,\n/static/cbdf6ceb6a55582045b41036741f6eec/12a3e/couchbase-setup-with-docker-wide.png 900w,\n/static/cbdf6ceb6a55582045b41036741f6eec/4dd11/couchbase-setup-with-docker-wide.png 1800w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/cbdf6ceb6a55582045b41036741f6eec/3f003/couchbase-setup-with-docker-wide.webp 225w,\n/static/cbdf6ceb6a55582045b41036741f6eec/ba134/couchbase-setup-with-docker-wide.webp 450w,\n/static/cbdf6ceb6a55582045b41036741f6eec/e7f7d/couchbase-setup-with-docker-wide.webp 900w,\n/static/cbdf6ceb6a55582045b41036741f6eec/fc420/couchbase-setup-with-docker-wide.webp 1800w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"couchbase setup with docker image"},"id":"1f242f2a-cfcf-5d06-b263-39f959ac71c8","slug":"development/couchbase-setup-dockerfile/"},{"frontmatter":{"title":"[번역] DataSource: 커넥션 풀링과 분산 트랜잭션","description":"오라클 공식 문서 'Package javax.sql'에 대한 번역입니다. DriverManager의 대체품인 DataSource가 커넥션 풀링과 분산 트랜잭션 기능을 어떻게 지원하는지에 대해 설명합니다.","date":"September 30, 2022","category":"docs","tags":["database","data-access","connection-pool","transaction","translation"],"hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/e9dd927a14d5f12af2ca73cacf2e6516/12a3e/datasource-wide.png","srcSet":"/static/e9dd927a14d5f12af2ca73cacf2e6516/9d9e0/datasource-wide.png 225w,\n/static/e9dd927a14d5f12af2ca73cacf2e6516/cc174/datasource-wide.png 450w,\n/static/e9dd927a14d5f12af2ca73cacf2e6516/12a3e/datasource-wide.png 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/e9dd927a14d5f12af2ca73cacf2e6516/3f003/datasource-wide.webp 225w,\n/static/e9dd927a14d5f12af2ca73cacf2e6516/ba134/datasource-wide.webp 450w,\n/static/e9dd927a14d5f12af2ca73cacf2e6516/e7f7d/datasource-wide.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":450}}},"hero_image_alt":"datasource wide image"},"id":"cb72e5c4-3a83-59e9-9908-0f2f2736773a","slug":"docs/datasource-vs-drivermanager/"}],"pageInfo":{"currentPage":1,"hasNextPage":true,"hasPreviousPage":false,"pageCount":2,"totalCount":13}}},"pageContext":{"slug":"database","ko":"데이터베이스","skip":0}},
    "staticQueryHashes": ["1903006949","2193720160"]}